[{"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js":"1","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js":"2","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js":"3","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js":"4","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js":"5","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js":"6","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js":"7","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js":"8","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js":"9","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js":"10","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js":"11","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js":"12","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js":"13","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js":"14","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js":"15","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js":"16","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js":"17","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js":"18","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js":"19","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js":"20","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js":"21","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js":"22","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js":"23","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js":"24","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js":"25","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js":"26","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\shared\\constant.js":"27","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchBar.js":"28","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js":"29","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchResults.js":"30","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Confirm.js":"31","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\DeleteModal.js":"32"},{"size":645,"mtime":1622888325781,"results":"33","hashOfConfig":"34"},{"size":318,"mtime":1622888280311,"results":"35","hashOfConfig":"34"},{"size":1712,"mtime":1623590352486,"results":"36","hashOfConfig":"34"},{"size":4565,"mtime":1623785932780,"results":"37","hashOfConfig":"34"},{"size":4458,"mtime":1623787641863,"results":"38","hashOfConfig":"34"},{"size":4489,"mtime":1623787630752,"results":"39","hashOfConfig":"34"},{"size":5130,"mtime":1623788887617,"results":"40","hashOfConfig":"34"},{"size":7518,"mtime":1623788966925,"results":"41","hashOfConfig":"34"},{"size":9476,"mtime":1623965414091,"results":"42","hashOfConfig":"34"},{"size":4341,"mtime":1623494472870,"results":"43","hashOfConfig":"34"},{"size":10615,"mtime":1623446717984,"results":"44","hashOfConfig":"34"},{"size":4466,"mtime":1623787489470,"results":"45","hashOfConfig":"34"},{"size":5693,"mtime":1623788949726,"results":"46","hashOfConfig":"34"},{"size":9125,"mtime":1623783322665,"results":"47","hashOfConfig":"34"},{"size":2307,"mtime":1623789094223,"results":"48","hashOfConfig":"34"},{"size":18729,"mtime":1623605099509,"results":"49","hashOfConfig":"34"},{"size":7403,"mtime":1623849020560,"results":"50","hashOfConfig":"34"},{"size":9257,"mtime":1623601454302,"results":"51","hashOfConfig":"34"},{"size":1223,"mtime":1623494511504,"results":"52","hashOfConfig":"34"},{"size":1158,"mtime":1623963803313,"results":"53","hashOfConfig":"34"},{"size":616,"mtime":1622666700059,"results":"54","hashOfConfig":"34"},{"size":17974,"mtime":1623784506877,"results":"55","hashOfConfig":"34"},{"size":345,"mtime":1621113765665,"results":"56","hashOfConfig":"34"},{"size":1178,"mtime":1621971330462,"results":"57","hashOfConfig":"34"},{"size":423,"mtime":1623963866196,"results":"58","hashOfConfig":"34"},{"size":1090,"mtime":1623963771302,"results":"59","hashOfConfig":"34"},{"size":110,"mtime":1623869612465,"results":"60","hashOfConfig":"34"},{"size":3906,"mtime":1623964013077,"results":"61","hashOfConfig":"34"},{"size":6057,"mtime":1623494486386,"results":"62","hashOfConfig":"34"},{"size":6015,"mtime":1623869556639,"results":"63","hashOfConfig":"34"},{"size":1644,"mtime":1623602350574,"results":"64","hashOfConfig":"34"},{"size":2182,"mtime":1623869420041,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1bv9h8u",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js",[],["136","137"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js",["138"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js",["139"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js",["140","141"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { Button, Label, Col, Row} from 'reactstrap'\r\n\r\nimport {url} from '../shared/constant'\r\n\r\nconst required = (val) => val && val.length\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    submit(values) {\r\n            axios.post(`${url}/owner/login`, values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Otoken\",res.data.data._id)\r\n                        window.location.href=\"/\"\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n    }\r\n    render() {\r\n        return (\r\n                <Row className=\"col-12\">\r\n                    <Col className=\"col-12\">\r\n                        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"home\" title=\"SignIn\">\r\n                                {this.state.error ?\r\n                                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                        <p>{this.state.error}</p>\r\n                                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </Button>\r\n                                    </div> : null}\r\n                                <LocalForm className=\"m-5\" onSubmit={this.submit}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col className=\"col-3\">\r\n                                            <Label htmlFor=\"username\"><span style={{color:\"red\"}}>*</span>Username: </Label>\r\n                                        </Col>\r\n                                        <Col className=\"col-6\">\r\n                                            <Control.text className=\"form-control\" model=\".username\" id=\"email\" name=\"username\" validators={{ required}}></Control.text>\r\n                                            <Errors className=\"text-danger\" show=\"touched\" model=\".username\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{color:\"red\"}}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required}} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                            </LocalForm>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default Login;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js",["142","143","144"],"import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nimport {url} from '../../shared/constant'\r\n\r\nimport SideNavbar from './SideNavbar'\r\nimport SideBar from './SideBar'\r\nimport { ImageLoader } from '../FunctionalComponent/ImageLoader';\r\nimport { ColorLoader } from '../FunctionalComponent/ColorLoader';\r\nimport ViewModal from '../Modals/ViewModal'\r\nimport Login from '../Login';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport '../../css/Detail.css'\r\nclass Detail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            productId: this.props.match.params.id,\r\n            details: null,\r\n            category: this.props.match.params.category,\r\n            isModalOpen: false,\r\n            product: null,\r\n            cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n            class: \"col-8 btn btn-outline-secondary btn-lg\",\r\n            wishlist: \"Add To Wishlist\",\r\n            notrefresh: null,\r\n            isLoginModal: false,\r\n            cart: \"Add to Cart\"\r\n        }\r\n\r\n        this.AddToWIshlist = this.AddToWIshlist.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.AddToCart = this.AddToCart.bind(this)\r\n    }\r\n    async componentWillMount() {\r\n        await axios.get(`${url}/customer/info/${localStorage.getItem(\"Ctoken\")}`)\r\n            .then(CustomerCart => {\r\n                console.log(CustomerCart)\r\n                if (CustomerCart.data.Bag && CustomerCart.data.Bag.length) {\r\n                    for (let i = 0; i < CustomerCart.data.Bag.length; i++) {\r\n                        if (CustomerCart.data.Bag[i].category === this.state.category && CustomerCart.data.Bag[i].productId === this.state.productId) {\r\n                            this.setState({\r\n                                cartClass: \"col-8 btn btn-warning btn-lg m-5\",\r\n                                cart: \"Remove from Cart\"\r\n                            })\r\n                            break\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n                                cart: \"Add to Cart\"\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n                        cart: \"Add to Cart\"\r\n                    })\r\n                }\r\n            })\r\n        axios.get(`${url}/${this.state.category}/info/${this.state.productId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    details: res.data[0].map((p, i) => {\r\n                        return (\r\n                            <Row key={i} className=\"shadow-lg bg-white rounded rowSize col-11 ml-auto mr-lg-4 marginTopDetail\">\r\n                                <Col className=\"col-12 col-xl-7 manageHeight\" onClick={p.Image.length ? () => this.toggleViewModal(p) : null}>\r\n                                    <ImageLoader className=\"col-12\" image={p.Image} length={p.Image.length} category={this.state.category} />\r\n                                </Col>\r\n                                <Col className=\"mt-5 mb-5 col-12 col-xl-5\">\r\n                                    <h1 style={{ color: \"darkkhaki\", fontWeight: \"bolder\" }}>{p.Name}</h1>\r\n                                    <h2>{p.Brand}</h2>\r\n                                    <h1>Rs. {p.Price}</h1>\r\n                                    <p>On order below than Rs. 1800 shipping Charges will be applied.</p>\r\n                                    <Row className=\"col-12\">\r\n                                        <ColorLoader color={res.data[2]} currentProductId={this.state.productId} colorProductId={res.data[1]} category={this.state.category} />\r\n                                    </Row>\r\n                                    <h3>Size(Width * Height): {p.Size.Width}x{p.Size.Height}</h3>\r\n                                    <div className=\"col-8 bg-warning m-auto\"><p>Choose color to know your product price.</p></div>\r\n                                    <Button onClick={this.AddToCart} id={p._id + \"cart\"} className={this.state.cartClass}><i className=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i>{this.state.cart}</Button>\r\n                                    {\r\n                                        p.Customers.map((customer) => {\r\n                                            if (customer === localStorage.getItem(\"Ctoken\")) {\r\n                                                this.setState({\r\n                                                    class: \"col-8 btn btn-secondary btn-lg\",\r\n                                                    wishlist: \"Wishlisted\"\r\n                                                })\r\n                                                return;\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    class: \"col-8 btn btn-outline-secondary btn-lg\",\r\n                                                    wishlist: \"Add To Wishlist\"\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={this.AddToWIshlist} id={p._id + \"button\"} className={this.state.class}><i id={p._id + \"button\"} className=\"fa fa-heart custom-fa-heart\" aria-hidden=\"true\"></i>{this.state.wishlist}</Button>\r\n                                    <Tabs className=\"mt-3 navLinkManageStyling\" defaultActiveKey=\"description\" id=\"uncontrolled-tab-example\">\r\n                                        <Tab eventKey=\"description\" title=\"Description\">\r\n                                            {p.Description}\r\n                                        </Tab>\r\n                                        <Tab eventKey=\"features\" title=\"Features\">\r\n                                            {p.Features}\r\n                                        </Tab>\r\n                                    </Tabs>\r\n                                </Col>\r\n                            </Row>\r\n                        );\r\n                    })\r\n                })\r\n            })\r\n    }\r\n    toggleViewModal(p) {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n            product: p\r\n        })\r\n    }\r\n    AddToWIshlist(e) {\r\n        const customerId = localStorage.getItem('Ctoken')\r\n        let productId = e.target.id\r\n        productId = productId.substring(0, productId.length - 6)\r\n        let color;\r\n        let category = this.state.category\r\n        if (this.state.wishlist == \"Wishlisted\") {\r\n            color = \"rgb(255, 0, 0)\"\r\n        }\r\n        else {\r\n            color = \"rgb(211, 211, 211)\"\r\n        }\r\n        if (customerId) {\r\n            axios.post(`${url}/customer/wishlist`, { customerId, productId, color, category })\r\n                .then(res => {\r\n                    return;\r\n                })\r\n            axios.post(`${url}/${this.state.category}/addCustomer`, { productId, customerId, color })\r\n                .then(res => {\r\n                    if (res.data.message) {\r\n                        this.setState({\r\n                            notRefreshed: \"Please refresh the page. Some of the items has been Updated in Wishlist.\",\r\n                            class: [\"col-8\", \"btn\", \"btn-outline-secondary\", \"btn-lg\"],\r\n                            wishlist: this.state.wishlist\r\n                        })\r\n                    }\r\n                    else{\r\n                        window.location.reload()\r\n                    }\r\n                })\r\n\r\n            setTimeout(() => {\r\n                document.getElementById(e.target.id).innerHTML = `<i id=${productId + \"button\"} class=\"fa fa-heart custom-fa-heart\" aria-hidden=\"true\"></i>`\r\n                const b = document.getElementById(e.target.id)\r\n                b.classList = \"\"\r\n                b.classList.add(this.state.class[0], this.state.class[1], this.state.class[2], this.state.class[3])\r\n                var newElem = document.createTextNode(this.state.wishlist)\r\n                b.appendChild(newElem)\r\n\r\n            }, 100)\r\n        }\r\n        else {\r\n\r\n            this.toggleModal()\r\n        }\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isLoginModal: !this.state.isLoginModal\r\n        })\r\n    }\r\n\r\n    AddToCart(e) {\r\n\r\n        const customerId = localStorage.getItem('Ctoken')\r\n        let productId = this.state.productId\r\n        let category = this.state.category\r\n        let cart = this.state.cart\r\n        if (customerId) {\r\n            axios.post(`${url}/customer/add/cart`, { customerId, productId, category, cart })\r\n                .then(res => {\r\n                    if (!(res.data.error || res.err)) {\r\n                        window.location.reload()\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            notRefreshed: res.data.error\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            this.toggleModal()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ overflowX: 'hidden' }}>\r\n\r\n                <SideNavbar/>\r\n                <SearchBar/>\r\n                {this.state.notRefreshed ?\r\n                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                        <p>{this.state.notRefreshed}</p>\r\n                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </Button>\r\n                    </div> : null}\r\n                {this.state.details}\r\n                <SideBar category={this.props.match.params.category} />\r\n                {this.state.isModalOpen && <ViewModal category={this.state.category} toggleViewModal={() => this.toggleViewModal()} product={this.state.product} isModelOpen={this.state.isModalOpen} />}\r\n                {this.state.isLoginModal && <Login isModalOpen={this.state.isLoginModal} toggleModal={() => this.toggleModal()} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js",["145","146","147","148","149","150","151"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js",["152","153","154","155","156","157","158","159","160","161","162","163","164"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\n// import { Redirect } from 'react-router'\r\nimport { Button, Label, Col, Row, ModalBody, Modal } from 'reactstrap'\r\n// import { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport { url } from '../shared/constant'\r\n\r\nconst required = (val) => val && val.length\r\n// const maxlength = (len) => (val) => !val || val.length <= len\r\n// const minlength = (len)=>(val) => val ? val.length >= len : 1;\r\nconst validEmail = (val) => !(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst pass = (val) => !(val) || /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/i.test(val);\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModal: this.props.isModalOpen,\r\n            err: null,\r\n            error: null\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        // if (\"geolocation\" in navigator) {\r\n        //     console.log(\"Available\");\r\n        //     navigator.geolocation.getCurrentPosition(function(position) {\r\n        //         console.log(\"Latitude is :\", position.coords.latitude);\r\n        //         console.log(\"Longitude is :\", position.coords.longitude);\r\n        //       });\r\n        //   } else {\r\n        //     console.log(\"Not Available\");\r\n        //   }\r\n    }\r\n    async toggleModal() {\r\n        await this.setState({\r\n            isModal: !this.state.isModal\r\n        })\r\n        this.props.toggleModal()\r\n    }\r\n    submit(values) {\r\n        if (values.repassword) {\r\n            var custmer = {\r\n                first: values.first,\r\n                last: values.last,\r\n                email: values.Upemail,\r\n                password: values.Uppassword,\r\n                repassword: values.repassword,\r\n                number: values.number,\r\n                address: values.address,\r\n                pincode: values.pincode,\r\n                state: values.state,\r\n                city: values.city,\r\n                country: values.country\r\n            }\r\n            axios.post(`${url}/customer/add`, custmer)\r\n                .then(res => {\r\n                    if (res.data.err) {\r\n                        this.setState({\r\n                            err: res.data.err\r\n                        })\r\n                    }\r\n                    // else if (res.data.data && res.data.data.confirmed) {\r\n\r\n                    //     localStorage.setItem(\"Ctoken\", res.data.data._id)\r\n                    //     this.toggleModal()\r\n                    //     window.location.reload(true)\r\n                    // }\r\n                    else if(res.data.data && !res.data.data.confirmed){\r\n                        this.toggleModal()\r\n                        this.setState({\r\n                            err: null\r\n                        })\r\n                        alert('Check your Inbox to verify your email id.')\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            axios.post(`${url}/customer/login`, values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Ctoken\", res.data.data._id)\r\n                        this.toggleModal()\r\n                        window.location.reload(true)\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal style={{ minWidth: \"80%\",height:\"fit-content\" }} isOpen={this.state.isModal} toggle={this.toggleModal}>\r\n                <ModalBody>\r\n                    <Row className=\"col-12\">\r\n                        <Col className=\"col-12\">\r\n                            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                                <Tab eventKey=\"home\" title=\"SignIn\" style={{ marginTop: \"2rem\" }}>\r\n                                    {this.state.error ?\r\n                                        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                            <p>{this.state.error}</p>\r\n                                            <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </Button>\r\n                                        </div> : null}\r\n                                    <LocalForm onSubmit={this.submit}>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-md-3\">\r\n                                                <Label htmlFor=\"email\"><span style={{ color: \"red\" }}>*</span>Email Id: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-md-6\">\r\n                                                <Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" validators={{ required, validEmail }}></Control.text>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".email\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        validEmail: \"Invalid Email\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-md-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{ color: \"red\" }}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-md-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required, pass }} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </LocalForm>\r\n                                </Tab>\r\n                                <Tab eventKey=\"profile\" title=\"SignUp\" style={{marginTop:\"2rem\"}}>\r\n                                    {this.state.err ?\r\n                                        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                            <p>{this.state.err}</p>\r\n                                            <button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        </div> : null}\r\n                                    <LocalForm onSubmit={this.submit}>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"first\"><span style={{ color: \"red\" }}>*</span>First Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".first\" id=\"first\" name=\"first\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"last\"><span style={{ color: \"red\" }}>*</span>Last Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".last\" id=\"last\" name=\"last\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"Upemail\"><span style={{ color: \"red\" }}>*</span>Email Id: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text className=\"form-control\" model=\".Upemail\" id=\"Upemail\" name=\"Upemail\" validators={{ required, validEmail }}></Control.text>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Upemail\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        validEmail: \"Invalid Email\"\r\n                                                    }}\r\n                                                />\r\n                                                <p style={{ color: \"orange\" }}>A confirmation mail will be send to your entered email id for verification.</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3 col-sm-3\">\r\n                                                <Label htmlFor=\"Uppassword\"><span style={{ color: \"red\" }}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.password className=\"form-control\" model=\".Uppassword\" id=\"Uppassword\" name=\"Uppassword\" validators={{ required, pass }}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Uppassword\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"repassword\"><span style={{ color: \"red\" }}>*</span>Re-Enter Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.password className=\"form-control\" model=\".repassword\" id=\"repassword\" name=\"repassword\" validators={{ required, pass }}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".repassword\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group mt-sm-3\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"number\"><span style={{ color: \"red\" }}>*</span>Phone No: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".number\" id=\"number\" name=\"number\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <p style={{ color: \"orange\",width:\"fit-content\" }} className=\"m-auto\">Remember you can not change your address later and this address will be considered as your shipping address.</p>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"address\"><span style={{ color: \"red\" }}>*</span>Street Address: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text className=\"form-control\" model=\".address\" id=\"address\" name=\"address\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"city\"><span style={{ color: \"red\" }}>*</span>City/Town: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".city\" id=\"city\" name=\"city\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"pincode\"><span style={{ color: \"red\" }}>*</span>Pincode: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".pincode\" id=\"pincode\" name=\"pincode\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"state\"><span style={{ color: \"red\" }}>*</span>State: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".state\" id=\"state\" name=\"state\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"country\"><span style={{ color: \"red\" }}>*</span>Country: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".country\" id=\"country\" name=\"country\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col className=\"col-11\">\r\n                                                <Button className=\"offset-md-5 offset-3 col-6 col-md-3 btn btn-lg btn-dark mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {/* <Row>\r\n                                    <Map google={this.props.google} zoom={14}>\r\n\r\n                                        <Marker onClick={this.onMarkerClick}\r\n                                            name={'Current location'} /> */}\r\n\r\n                                        {/* <InfoWindow onClose={this.onInfoWindowClose}>\r\n                                            <div>\r\n                                                <h1>{this.state.selectedPlace.name}</h1>\r\n                                            </div>\r\n                                        </InfoWindow> */}\r\n                                        {/* </Map>\r\n                                </Row> */}\r\n\r\n                                    </LocalForm>\r\n\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Login;\r\n// export default GoogleApiWrapper({\r\n//     apiKey: (\"AIzaSyDPgfGuxoRXhQHaC9gJCk2SCt8SiZNJRMo\")\r\n//   })(Login)","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js",["165","166","167"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js",["168","169","170"],"import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\n\r\n\r\nexport function ColorLoader(props) {\r\n    function addColorSelection(category,colorProductId) {\r\n        // props.colorPrice(e.target.id)\r\n        // let circle=document.getElementsByClassName(\"rounded-circle\")\r\n        // let i=0\r\n        // while(circle[i]){\r\n        //     if(circle[i].id===e.target.id){\r\n        //         circle[i].innerHTML=\"<i className='fa fa-check' style={{color:'blue'}} aria-hidden='true'></i>\"\r\n        //     }\r\n        //     else{\r\n        //         circle[i].innerHTML=\"\"\r\n        //     }\r\n        //     i++;\r\n        // }\r\n        window.location.href=`/${category}/detail/${colorProductId}`\r\n    }\r\n    var array = []\r\n    var colors = props.color\r\n    \r\n    colors.map((c, i) => {\r\n        array.push(<Col className=\"m-auto col-1 col-sm-2\"><p>{c}</p><div id={i} onClick={()=>addColorSelection(props.category,props.colorProductId[i])} style={{ display: \"inline\", margin: \"0px\" }} className=\"rounded-circle custom-circle\" style={{ backgroundColor: c }}>{props.currentProductId===props.colorProductId[i]?<i className='fa fa-check' aria-hidden='true'></i>:null}</div></Col>)\r\n    })\r\n    return array;\r\n\r\n}","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js",["171","172"],"import React from 'react';\r\n\r\nimport {url} from '../../shared/constant'\r\n\r\nimport DynamicCarousel from '../CommonComponents/DynamicCarousel'\r\n\r\nexport function ImageLoader(props){\r\n\r\n    let image=url + \"/\" + props.category + \"/images\" + \"/\" + props.image\r\n\r\n    return(\r\n        <div style={{height:\"100%\"}} >\r\n            {props.length==1?\r\n            <img id={props.id} className=\"image col-md-12\"\r\n            src={props.image!==null?image:null}\r\n            alt={props.image!==null?props.image:null}/>:\r\n            <DynamicCarousel category={props.category} image={props.image}/>}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\shared\\constant.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchBar.js",["198"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchResults.js",["199","200"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Confirm.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\DeleteModal.js",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":44,"column":67,"nodeType":"207","messageId":"208","endLine":44,"endColumn":69},{"ruleId":"209","severity":1,"message":"210","line":65,"column":21,"nodeType":"211","messageId":"212","endLine":65,"endColumn":192},{"ruleId":"209","severity":1,"message":"210","line":52,"column":45,"nodeType":"211","messageId":"212","endLine":52,"endColumn":154},{"ruleId":"209","severity":1,"message":"213","line":65,"column":49,"nodeType":"211","messageId":"212","endLine":65,"endColumn":166},{"ruleId":"205","severity":1,"message":"206","line":88,"column":68,"nodeType":"207","messageId":"208","endLine":88,"endColumn":70},{"ruleId":"205","severity":1,"message":"214","line":94,"column":49,"nodeType":"215","messageId":"216","endLine":94,"endColumn":56},{"ruleId":"217","severity":1,"message":"218","line":132,"column":33,"nodeType":"219","messageId":"220","endLine":132,"endColumn":35},{"ruleId":"221","severity":1,"message":"222","line":125,"column":83,"nodeType":"211","endLine":125,"endColumn":144},{"ruleId":"221","severity":1,"message":"222","line":138,"column":80,"nodeType":"211","endLine":138,"endColumn":149},{"ruleId":"221","severity":1,"message":"222","line":151,"column":78,"nodeType":"211","endLine":151,"endColumn":142},{"ruleId":"223","severity":1,"message":"224","line":162,"column":41,"nodeType":"211","endLine":162,"endColumn":140},{"ruleId":"223","severity":1,"message":"224","line":166,"column":62,"nodeType":"211","endLine":166,"endColumn":95},{"ruleId":"223","severity":1,"message":"224","line":172,"column":41,"nodeType":"211","endLine":172,"endColumn":137},{"ruleId":"223","severity":1,"message":"224","line":177,"column":41,"nodeType":"211","endLine":177,"endColumn":71},{"ruleId":"209","severity":1,"message":"210","line":119,"column":49,"nodeType":"211","messageId":"212","endLine":119,"endColumn":165},{"ruleId":"209","severity":1,"message":"213","line":133,"column":49,"nodeType":"211","messageId":"212","endLine":133,"endColumn":173},{"ruleId":"209","severity":1,"message":"210","line":161,"column":49,"nodeType":"211","messageId":"212","endLine":161,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":167,"column":49,"nodeType":"211","messageId":"212","endLine":167,"endColumn":133},{"ruleId":"209","severity":1,"message":"210","line":175,"column":49,"nodeType":"211","messageId":"212","endLine":175,"endColumn":171},{"ruleId":"209","severity":1,"message":"213","line":190,"column":49,"nodeType":"211","messageId":"212","endLine":190,"endColumn":178},{"ruleId":"209","severity":1,"message":"213","line":202,"column":49,"nodeType":"211","messageId":"212","endLine":202,"endColumn":178},{"ruleId":"209","severity":1,"message":"210","line":216,"column":49,"nodeType":"211","messageId":"212","endLine":216,"endColumn":153},{"ruleId":"209","severity":1,"message":"210","line":225,"column":49,"nodeType":"211","messageId":"212","endLine":225,"endColumn":142},{"ruleId":"209","severity":1,"message":"210","line":233,"column":49,"nodeType":"211","messageId":"212","endLine":233,"endColumn":133},{"ruleId":"209","severity":1,"message":"210","line":239,"column":49,"nodeType":"211","messageId":"212","endLine":239,"endColumn":156},{"ruleId":"209","severity":1,"message":"210","line":247,"column":49,"nodeType":"211","messageId":"212","endLine":247,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":253,"column":49,"nodeType":"211","messageId":"212","endLine":253,"endColumn":142},{"ruleId":"205","severity":1,"message":"206","line":24,"column":56,"nodeType":"207","messageId":"208","endLine":24,"endColumn":58},{"ruleId":"217","severity":1,"message":"218","line":25,"column":28,"nodeType":"219","messageId":"220","endLine":25,"endColumn":30},{"ruleId":"205","severity":1,"message":"214","line":29,"column":21,"nodeType":"215","messageId":"216","endLine":29,"endColumn":28},{"ruleId":"225","severity":1,"message":"226","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"214","line":24,"column":23,"nodeType":"207","messageId":"229","endLine":24,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":25,"column":239,"nodeType":"232","messageId":"233","endLine":25,"endColumn":269},{"ruleId":"234","severity":1,"message":"235","line":9,"column":54,"nodeType":"219","messageId":"236","endLine":9,"endColumn":55},{"ruleId":"217","severity":1,"message":"218","line":13,"column":26,"nodeType":"219","messageId":"220","endLine":13,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":99,"column":37,"nodeType":"211","messageId":"212","endLine":99,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":108,"column":37,"nodeType":"211","messageId":"212","endLine":108,"endColumn":153},{"ruleId":"209","severity":1,"message":"210","line":118,"column":37,"nodeType":"211","messageId":"212","endLine":118,"endColumn":151},{"ruleId":"209","severity":1,"message":"210","line":128,"column":37,"nodeType":"211","messageId":"212","endLine":128,"endColumn":154},{"ruleId":"209","severity":1,"message":"237","line":140,"column":37,"nodeType":"211","messageId":"212","endLine":140,"endColumn":177},{"ruleId":"209","severity":1,"message":"210","line":158,"column":45,"nodeType":"211","messageId":"212","endLine":158,"endColumn":135},{"ruleId":"209","severity":1,"message":"210","line":162,"column":45,"nodeType":"211","messageId":"212","endLine":162,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":166,"column":45,"nodeType":"211","messageId":"212","endLine":166,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":170,"column":45,"nodeType":"211","messageId":"212","endLine":170,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":174,"column":45,"nodeType":"211","messageId":"212","endLine":174,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":182,"column":37,"nodeType":"211","messageId":"212","endLine":182,"endColumn":141},{"ruleId":"209","severity":1,"message":"238","line":193,"column":45,"nodeType":"211","messageId":"212","endLine":193,"endColumn":133},{"ruleId":"209","severity":1,"message":"238","line":197,"column":45,"nodeType":"211","messageId":"212","endLine":197,"endColumn":133},{"ruleId":"209","severity":1,"message":"238","line":201,"column":45,"nodeType":"211","messageId":"212","endLine":201,"endColumn":131},{"ruleId":"209","severity":1,"message":"238","line":205,"column":45,"nodeType":"211","messageId":"212","endLine":205,"endColumn":131},{"ruleId":"209","severity":1,"message":"238","line":209,"column":45,"nodeType":"211","messageId":"212","endLine":209,"endColumn":133},{"ruleId":"209","severity":1,"message":"210","line":218,"column":45,"nodeType":"211","messageId":"212","endLine":218,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":222,"column":45,"nodeType":"211","messageId":"212","endLine":222,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":226,"column":45,"nodeType":"211","messageId":"212","endLine":226,"endColumn":142},{"ruleId":"209","severity":1,"message":"210","line":230,"column":45,"nodeType":"211","messageId":"212","endLine":230,"endColumn":142},{"ruleId":"209","severity":1,"message":"210","line":234,"column":45,"nodeType":"211","messageId":"212","endLine":234,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":241,"column":37,"nodeType":"211","messageId":"212","endLine":241,"endColumn":150},{"ruleId":"209","severity":1,"message":"210","line":250,"column":37,"nodeType":"211","messageId":"212","endLine":250,"endColumn":112},{"ruleId":"209","severity":1,"message":"239","line":256,"column":37,"nodeType":"211","messageId":"212","endLine":256,"endColumn":125},{"ruleId":"209","severity":1,"message":"239","line":262,"column":37,"nodeType":"211","messageId":"212","endLine":262,"endColumn":137},{"ruleId":"209","severity":1,"message":"210","line":77,"column":15,"nodeType":"211","messageId":"212","endLine":77,"endColumn":111},{"ruleId":"230","severity":1,"message":"231","line":32,"column":297,"nodeType":"232","messageId":"233","endLine":32,"endColumn":304},{"ruleId":"217","severity":1,"message":"240","line":45,"column":88,"nodeType":"219","messageId":"220","endLine":45,"endColumn":90},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]