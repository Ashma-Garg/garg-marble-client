[{"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js":"1","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js":"2","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js":"3","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js":"4","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js":"5","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js":"6","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js":"7","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js":"8","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js":"9","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js":"10","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js":"11","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js":"12","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js":"13","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js":"14","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js":"15","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js":"16","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js":"17","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js":"18","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js":"19","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js":"20","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js":"21","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js":"22","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js":"23","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js":"24","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js":"25","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js":"26","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js":"27"},{"size":645,"mtime":1621187828935,"results":"28","hashOfConfig":"29"},{"size":318,"mtime":1621113765637,"results":"30","hashOfConfig":"29"},{"size":1432,"mtime":1621113765673,"results":"31","hashOfConfig":"29"},{"size":3574,"mtime":1621774703659,"results":"32","hashOfConfig":"29"},{"size":3490,"mtime":1621774696772,"results":"33","hashOfConfig":"29"},{"size":3516,"mtime":1621774700417,"results":"34","hashOfConfig":"29"},{"size":4270,"mtime":1621774691513,"results":"35","hashOfConfig":"29"},{"size":7208,"mtime":1621774678264,"results":"36","hashOfConfig":"29"},{"size":6723,"mtime":1621113765670,"results":"37","hashOfConfig":"29"},{"size":4329,"mtime":1621774686480,"results":"38","hashOfConfig":"29"},{"size":12677,"mtime":1621774635008,"results":"39","hashOfConfig":"29"},{"size":3477,"mtime":1621774626631,"results":"40","hashOfConfig":"29"},{"size":5233,"mtime":1621774707094,"results":"41","hashOfConfig":"29"},{"size":6010,"mtime":1621113765664,"results":"42","hashOfConfig":"29"},{"size":2091,"mtime":1621113765662,"results":"43","hashOfConfig":"29"},{"size":6072,"mtime":1621774631022,"results":"44","hashOfConfig":"29"},{"size":17996,"mtime":1621774682364,"results":"45","hashOfConfig":"29"},{"size":6467,"mtime":1621774645781,"results":"46","hashOfConfig":"29"},{"size":9244,"mtime":1621774641928,"results":"47","hashOfConfig":"29"},{"size":1206,"mtime":1621113765666,"results":"48","hashOfConfig":"29"},{"size":1118,"mtime":1621113765675,"results":"49","hashOfConfig":"29"},{"size":564,"mtime":1621774666243,"results":"50","hashOfConfig":"29"},{"size":17987,"mtime":1621759971687,"results":"51","hashOfConfig":"29"},{"size":345,"mtime":1621113765665,"results":"52","hashOfConfig":"29"},{"size":1167,"mtime":1621774657340,"results":"53","hashOfConfig":"29"},{"size":405,"mtime":1621113765657,"results":"54","hashOfConfig":"29"},{"size":1036,"mtime":1621113765657,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b9nc5w",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js",["120"],"import React, { Component } from 'react'\r\nimport { Carousel, Row, Col } from 'react-bootstrap'\r\nimport Header from './CommonComponents/Header'\r\nimport image from '../images/Main.jpg'\r\nimport '../css/homepage.css'\r\nimport { Control, LocalForm } from 'react-redux-form'\r\n\r\nclass Homepage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Row>\r\n          <Col className=\"col-12\">\r\n            <div className=\"mdbcolsd col-12\">\r\n              <LocalForm>\r\n                <Control.text className=\"form-control col-8 offset-2\" placeholder=\"Search\" model=\".search\" style={{ background: \"rgba(0, 0, 0, 0.4)\", color: \"white\" }} />\r\n              </LocalForm>\r\n            </div>\r\n\r\n            <div className=\"sliderr col-6 offset-3\">\r\n              <p>We provide you the best</p>\r\n              <p>EXPERIENCE</p>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n            <img src={image} alt=\"Main\" style={{ width: \"100%\", height: \"100vh\" }} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ paddingTop: \"100px\" }}>\r\n          <div id=\"first\" className=\"col-sm-12 col-md-6 col-lg-4 d-inline-block\">\r\n            <Carousel>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDkwsEzbofdPAhLy8aWJCzpm1os0MBgB1Xlg&usqp=CAU\"\r\n                  alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>ToiLet Seats</h3>\r\n                  <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQy6GtX0HM-a5DyUCYQtawHXj-Tf41aD-EF1w&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>WashBasin</h3>\r\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXxZDYcRbZMiPTZQ05Z3URKfnzyhZZO4XVYw&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>Taps</h3>\r\n                  <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </div>\r\n          <div id=\"second\" className=\"col-sm-12 col-md-6 col-lg-4\">\r\n            <Carousel>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDkwsEzbofdPAhLy8aWJCzpm1os0MBgB1Xlg&usqp=CAU\"\r\n                  alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>ToiLet Seats</h3>\r\n                  <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQy6GtX0HM-a5DyUCYQtawHXj-Tf41aD-EF1w&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>WashBasin</h3>\r\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXxZDYcRbZMiPTZQ05Z3URKfnzyhZZO4XVYw&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>Taps</h3>\r\n                  <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </div>\r\n          <div id=\"third\" className=\"col-sm-12 col-md-12 col-lg-4\">\r\n            <Carousel>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDkwsEzbofdPAhLy8aWJCzpm1os0MBgB1Xlg&usqp=CAU\"\r\n                  alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>ToiLet Seats</h3>\r\n                  <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQy6GtX0HM-a5DyUCYQtawHXj-Tf41aD-EF1w&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>WashBasin</h3>\r\n                  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n              <Carousel.Item interval=\"1000\">\r\n                <img\r\n                  style={{ height: \"70vh\" }}\r\n                  className=\"d-block w-100\"\r\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXxZDYcRbZMiPTZQ05Z3URKfnzyhZZO4XVYw&usqp=CAU\"\r\n                  alt=\"Third slide\"\r\n                />\r\n\r\n                <Carousel.Caption>\r\n                  <h3>Taps</h3>\r\n                  <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Homepage;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js",["121","122"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { Button, Label, Col, Row} from 'reactstrap'\r\n\r\nconst required = (val) => val && val.length\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    submit(values) {\r\n            axios.post('https://garg-marble-server.herokuapp.com/owner/login', values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Otoken\",res.data.data._id)\r\n                        window.location.href=\"/\"\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n    }\r\n    render() {\r\n        return (\r\n                <Row className=\"col-12\">\r\n                    <Col className=\"col-12\">\r\n                        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"home\" title=\"SignIn\">\r\n                                {this.state.error ?\r\n                                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                        <p>{this.state.error}</p>\r\n                                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </Button>\r\n                                    </div> : null}\r\n                                <LocalForm className=\"m-5\" onSubmit={this.submit}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col className=\"col-3\">\r\n                                            <Label htmlFor=\"username\"><span style={{color:\"red\"}}>*</span>Username: </Label>\r\n                                        </Col>\r\n                                        <Col className=\"col-6\">\r\n                                            <Control.text className=\"form-control\" model=\".username\" id=\"email\" name=\"username\" validators={{ required}}></Control.text>\r\n                                            <Errors className=\"text-danger\" show=\"touched\" model=\".username\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{color:\"red\"}}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required}} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                            </LocalForm>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default Login;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js",["123","124","125","126"],"import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Row, Col, Button } from 'reactstrap'\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport axios from 'axios'\r\n\r\nimport SideNavbar from './SideNavbar'\r\nimport SideBar from './SideBar'\r\nimport { ImageLoader } from '../FunctionalComponent/ImageLoader';\r\nimport { ColorLoader } from '../FunctionalComponent/ColorLoader';\r\nimport '../../css/Detail.css'\r\nimport ViewModal from '../Modals/ViewModal'\r\nimport Login from '../Login';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\n\r\nclass Detail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            productId: this.props.match.params.id,\r\n            details: null,\r\n            category: this.props.match.params.category,\r\n            active: false,\r\n            isModalOpen: false,\r\n            product: null,\r\n            cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n            class: \"col-8 btn btn-outline-secondary btn-lg\",\r\n            wishlist: \"Add To Wishlist\",\r\n            notrefresh: null,\r\n            isLoginModal: false,\r\n            cart: \"Add to Cart\"\r\n        }\r\n\r\n        this.toggleSideNav = this.toggleSideNav.bind(this);\r\n        this.AddToWIshlist = this.AddToWIshlist.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.AddToCart = this.AddToCart.bind(this)\r\n    }\r\n    async componentWillMount() {\r\n        await axios.get(`https://garg-marble-server.herokuapp.com/customer/info/${localStorage.getItem(\"Ctoken\")}`)\r\n            .then(CustomerCart => {\r\n                if (CustomerCart.data.Bag && CustomerCart.data.Bag.length) {\r\n                    for (let i = 0; i < CustomerCart.data.Bag.length; i++) {\r\n                        if (CustomerCart.data.Bag[i].category === this.state.category && CustomerCart.data.Bag[i].productId === this.state.productId) {\r\n                            this.setState({\r\n                                cartClass: \"col-8 btn btn-warning btn-lg m-5\",\r\n                                cart: \"Remove from Cart\"\r\n                            })\r\n                            break\r\n                        }\r\n                        else {\r\n                            this.setState({\r\n                                cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n                                cart: \"Add to Cart\"\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        cartClass: \"col-8 btn btn-outline-warning btn-lg m-5\",\r\n                        cart: \"Add to Cart\"\r\n                    })\r\n                }\r\n            })\r\n        axios.get(`https://garg-marble-server.herokuapp.com/${this.state.category}/info/${this.state.productId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    details: res.data[0].map((p, i) => {\r\n                        return (\r\n                            <Row key={i} className=\"shadow-lg bg-white rounded rowSize col-11 m-auto\">\r\n                                <Col className=\"col-12 col-xl-7 manageHeight\" onClick={p.Image.length ? () => this.toggleViewModal(p) : null}>\r\n                                    <ImageLoader className=\"col-12\" image={p.Image} length={p.Image.length} category={this.state.category} />\r\n                                </Col>\r\n                                <Col className=\"mt-5 mb-5 col-12 col-xl-5\">\r\n                                    <h1 style={{ color: \"darkkhaki\", fontWeight: \"bolder\" }}>{p.Name}</h1>\r\n                                    <h2>{p.Brand}</h2>\r\n                                    <h1>Rs. {p.Price}</h1>\r\n                                    <p>On order below than Rs. 1800 shipping Charges will be applied.</p>\r\n                                    <Row className=\"col-12\">\r\n                                        <ColorLoader color={res.data[2]} currentProductId={this.state.productId} colorProductId={res.data[1]} category={this.state.category} />\r\n                                    </Row>\r\n                                    <h3>Size(Width * Height): {p.Size.Width}x{p.Size.Height}</h3>\r\n                                    <div className=\"col-8 bg-warning m-auto\"><p>Choose color to know your product price.</p></div>\r\n                                    <Button onClick={this.AddToCart} id={p._id + \"cart\"} className={this.state.cartClass}><i className=\"fa fa-shopping-bag\" aria-hidden=\"true\"></i>{this.state.cart}</Button>\r\n                                    {\r\n                                        p.Customers.map((customer) => {\r\n                                            if (customer === localStorage.getItem(\"Ctoken\")) {\r\n                                                this.setState({\r\n                                                    class: \"col-8 btn btn-secondary btn-lg\",\r\n                                                    wishlist: \"Wishlisted\"\r\n                                                })\r\n                                                return;\r\n                                            }\r\n                                            else {\r\n                                                this.setState({\r\n                                                    class: \"col-8 btn btn-outline-secondary btn-lg\",\r\n                                                    wishlist: \"Add To Wishlist\"\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    <Button onClick={this.AddToWIshlist} id={p._id + \"button\"} className={this.state.class}><i id={p._id + \"button\"} className=\"fa fa-heart custom-fa-heart\" aria-hidden=\"true\"></i>{this.state.wishlist}</Button>\r\n                                    <Tabs className=\"mt-3\" defaultActiveKey=\"description\" id=\"uncontrolled-tab-example\">\r\n                                        <Tab eventKey=\"description\" title=\"Description\">\r\n                                            {p.Description}\r\n                                        </Tab>\r\n                                        <Tab eventKey=\"features\" title=\"Features\">\r\n                                            {p.Features}\r\n                                        </Tab>\r\n                                    </Tabs>\r\n                                </Col>\r\n                            </Row>\r\n                        );\r\n                    })\r\n                })\r\n            })\r\n    }\r\n    toggleSideNav() {\r\n        if (this.state.active) {\r\n            let elem = document.getElementsByClassName(\"menu\")\r\n            elem[0].classList.remove(\"active\");\r\n\r\n            let e = document.getElementsByClassName(\"searchBar\")\r\n            e[0].classList.remove(\"col-9\", \"col-xl-8\", \"offset-3\", \"offset-xl-3\")\r\n            e[0].classList.add(\"col-10\", \"m-auto\")\r\n\r\n            let el = document.getElementsByClassName(\"rowSize\")\r\n            el[0].classList.add(\"col-11\", \"col-xl-11\", \"m-auto\")\r\n            el[0].classList.remove(\"col-8\", \"col-xl-10\", \"ml-auto\", \"mr-xl-1\")\r\n        }\r\n        else {\r\n            let elem = document.getElementsByClassName(\"menu\")\r\n            elem[0].classList.add(\"active\");\r\n\r\n            let e = document.getElementsByClassName(\"searchBar\")\r\n            e[0].classList.remove(\"col-10\", \"m-auto\")\r\n            e[0].classList.add(\"col-9\", \"col-xl-8\", \"offset-3\", \"offset-xl-3\")\r\n\r\n            let el = document.getElementsByClassName(\"rowSize\")\r\n            el[0].classList.add(\"col-8\", \"col-xl-10\", \"ml-auto\", \"mr-5\", \"mr-xl-1\")\r\n            el[0].classList.remove(\"col-11\", \"col-xl-11\", \"m-auto\")\r\n        }\r\n        this.setState({\r\n            active: !this.state.active\r\n        })\r\n    }\r\n    toggleViewModal(p) {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n            product: p\r\n        })\r\n    }\r\n    AddToWIshlist(e) {\r\n        const customerId = localStorage.getItem('Ctoken')\r\n        let productId = e.target.id\r\n        productId = productId.substring(0, productId.length - 6)\r\n        let color;\r\n        let category = this.state.category\r\n        if (this.state.wishlist == \"Wishlisted\") {\r\n            color = \"rgb(255, 0, 0)\"\r\n        }\r\n        else {\r\n            color = \"rgb(211, 211, 211)\"\r\n        }\r\n        if (customerId) {\r\n            axios.post(`https://garg-marble-server.herokuapp.com/customer/wishlist`, { customerId, productId, color, category })\r\n                .then(res => {\r\n                    return;\r\n                })\r\n            axios.post(`https://garg-marble-server.herokuapp.com/${this.state.category}/addCustomer`, { productId, customerId, color })\r\n                .then(res => {\r\n                    if (res.data.message) {\r\n                        this.setState({\r\n                            notRefreshed: \"Please refresh the page. Some of the items has been Updated in Wishlist.\",\r\n                            class: [\"col-8\", \"btn\", \"btn-outline-secondary\", \"btn-lg\"],\r\n                            wishlist: this.state.wishlist\r\n                        })\r\n                    }\r\n                    else{\r\n                        window.location.reload()\r\n                    }\r\n                })\r\n\r\n            setTimeout(() => {\r\n                document.getElementById(e.target.id).innerHTML = `<i id=${productId + \"button\"} class=\"fa fa-heart custom-fa-heart\" aria-hidden=\"true\"></i>`\r\n                const b = document.getElementById(e.target.id)\r\n                b.classList = \"\"\r\n                b.classList.add(this.state.class[0], this.state.class[1], this.state.class[2], this.state.class[3])\r\n                var newElem = document.createTextNode(this.state.wishlist)\r\n                b.appendChild(newElem)\r\n\r\n            }, 100)\r\n        }\r\n        else {\r\n\r\n            this.toggleModal()\r\n        }\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isLoginModal: !this.state.isLoginModal\r\n        })\r\n    }\r\n\r\n    AddToCart(e) {\r\n\r\n        const customerId = localStorage.getItem('Ctoken')\r\n        let productId = this.state.productId\r\n        let category = this.state.category\r\n        let cart = this.state.cart\r\n        if (customerId) {\r\n            axios.post(`https://garg-marble-server.herokuapp.com/customer/add/cart`, { customerId, productId, category, cart })\r\n                .then(res => {\r\n                    if (!(res.data.error || res.err)) {\r\n                        window.location.reload()\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            notRefreshed: res.data.error\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            this.toggleModal()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ overflowX: 'hidden' }}>\r\n\r\n                <SideNavbar showsearch=\"no\" />\r\n                <div className=\"shadow-lg custom-color rounded\" style={{ marginBottom: \"20px\" }}>\r\n\r\n                    <LocalForm className=\"searchBar pt-4 pb-4 col-10 m-auto\">\r\n                        <Row className=\"form-group\">\r\n                            <Button onClick={this.toggleSideNav} className=\"toggle-button ml-2\" title=\"Toggle Side Navbar\"><i class=\"fa fa-bars p-0\" aria-hidden=\"true\"></i></Button>\r\n                            <Col>\r\n                                <Control.text model=\".search\" className=\"form-control\" placeholder=\"Search\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </div>\r\n                {this.state.notRefreshed ?\r\n                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                        <p>{this.state.notRefreshed}</p>\r\n                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </Button>\r\n                    </div> : null}\r\n                {this.state.details}\r\n                <SideBar category={this.props.match.params.category} />\r\n                {this.state.isModalOpen && <ViewModal category={this.state.category} toggleViewModal={() => this.toggleViewModal()} product={this.state.product} isModelOpen={this.state.isModalOpen} />}\r\n                {this.state.isLoginModal && <Login isModalOpen={this.state.isLoginModal} toggleModal={() => this.toggleModal()} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js",["127","128","129"],"import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport { Control, LocalForm } from 'react-redux-form';\r\n\r\nimport { Brands } from '../FunctionalComponent/functionHelper'\r\nimport Login from '../Login'\r\nimport '../../css/SideNavbar.css'\r\nimport SubMenu from './Submenu'\r\n\r\n\r\nclass SideNavbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dropmenu1: Brands('washbasin'),\r\n            dropmenu2: Brands('toilet'),\r\n            dropmenu3: Brands('taps'),\r\n            dropdown1: false,\r\n            dropdown2: false,\r\n            dropdown3: false,\r\n            showsearch: null,\r\n            isModalOpen:false\r\n\r\n        }\r\n        this.logoutCustomer = this.logoutCustomer.bind(this)\r\n        this.toggleModal= this.toggleModal.bind(this)\r\n\r\n    };\r\n    componentDidMount() {\r\n        //this if else condition is for sidenavbar display\r\n        if (this.props.showsearch) {\r\n            this.setState({\r\n                showSearch: \"none\"\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                showSearch: \"block\"\r\n            })\r\n            var ele = document.getElementsByClassName(\"menu\")\r\n            ele[0].classList.add(\"active\")\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        let customerId=localStorage.getItem(\"Ctoken\")?localStorage.getItem(\"Ctoken\"):null;\r\n        if(customerId){\r\n            document.getElementById(\"customerLogOut\").style.display=\"block\"\r\n            document.getElementById(\"customerLogIn\").style.display=\"none\"\r\n        }\r\n        else{\r\n            document.getElementById(\"customerLogOut\").style.display=\"none\"   \r\n            document.getElementById(\"customerLogIn\").style.display=\"block\"\r\n        } \r\n    }\r\n    async toggleSubMenu(id) {\r\n        await this.setState({\r\n            [id]: !this.state[`${id}`]\r\n        })\r\n        if (id === \"dropdown1\") {\r\n            this.setState({\r\n                dropdown2: false,\r\n                dropdown3: false\r\n            })\r\n        }\r\n        else if (id === \"dropdown2\") {\r\n            this.setState({\r\n                dropdown1: false,\r\n                dropdown3: false\r\n            })\r\n        }\r\n        else if (id === \"dropdown3\") {\r\n            this.setState({\r\n                dropdown2: false,\r\n                dropdown1: false\r\n            })\r\n        }\r\n    }\r\n    logoutCustomer() {\r\n        localStorage.removeItem(\"Ctoken\")\r\n        this.setState({\r\n            userName:null\r\n        })\r\n        window.location.reload(true)\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"menu col-3 col-xl-2\">\r\n                    <ul class=\"nav flex-column overflow-scroll flex-nowrap sideNavUL\">\r\n                        <li id=\"business\">\r\n                            <a href=\"/\">Garg Marble & Sanitary House</a>\r\n                        </li>\r\n                        <li>\r\n                            <a className=\"nav-link\" href='/'>Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link d-inline-block\" href=\"/washbasin\">Washbasin </a> <span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown1\")}></span>\r\n                        </li>\r\n                        {this.state.dropdown1 && <SubMenu category=\"washbasin\" list={this.state.dropmenu1} />}\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link d-inline-block\" href=\"/toilet\">Toilet </a> <span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown2\")}></span>\r\n                        </li>\r\n                        {this.state.dropdown2 && <SubMenu category=\"toilet\" list={this.state.dropmenu2} />}\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link d-inline-block\" href=\"/taps\">Taps </a> <span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown3\")}></span>\r\n                        </li>\r\n                        {this.state.dropdown3 && <SubMenu category=\"taps\" list={this.state.dropmenu3} />}\r\n                        <div id=\"customerLogOut\" className=\" mt-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"d-inline-block\" style={{ cursor: \"pointer\" }}>{this.state.userName}</a>\r\n                            </li> */}\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"d-inline-block\" onClick={this.logoutCustomer} style={{ cursor: \"pointer\" }}>LogOut</a>\r\n                            </li>\r\n                        </div>\r\n                        <div id=\"customerLogIn\" className=\" mt-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"d-inline-block\" onClick={this.toggleModal} style={{ cursor: \"pointer\" }}>LogIn</a>\r\n                            </li>\r\n                        </div>\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"shadow-lg custom-color rounded\" style={{ marginBottom: \"20px\", display: this.state.showSearch }}>\r\n\r\n                    <LocalForm className=\"col-8 col-xl-9 offset-3 offset-xl-2 mr-5 pt-4 pb-4\">\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Control.text model=\".search\" className=\"form-control\" placeholder=\"Search\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </div>\r\n                {this.state.isModalOpen && <Login isModalOpen={this.state.isModalOpen} toggleModal={() => this.toggleModal()} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNavbar;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js",["130","131"],"import React, { Component } from 'react'\r\nimport { Row, Col} from 'reactstrap'\r\n\r\nimport { ImageLoader } from '../FunctionalComponent/ImageLoader'\r\nimport \"../../css/ProductDisplay.css\"\r\nimport axios from 'axios'\r\nimport { Control, LocalForm } from 'react-redux-form'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass CartDisplay extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n        this.onchange=this.onchange.bind(this)\r\n    }\r\n    //to provide the inputs with quatities that were saved in db when user last visited the cart page\r\n    componentDidMount(){\r\n        document.getElementById(this.props.product._id).value=this.props.quantity\r\n    }\r\n\r\n    //to open Detail component\r\n    productDetail(id){\r\n        window.open(`https://garg-marble-server.herokuapp.com/${this.props.category}/detail/${id}`)\r\n    }\r\n\r\n    //add or subtract 1 from quantity when the plus or minus button clicked\r\n    alterQuantity(val){\r\n        if(parseInt(document.getElementById(this.props.product._id).value) + parseInt(val)>=1){\r\n            document.getElementById(this.props.product._id).value=parseInt(document.getElementById(this.props.product._id).value) + parseInt(val)\r\n            document.getElementById(this.props.product._id).addEventListener('change',this.onchange(document.getElementById(this.props.product._id).value))\r\n        }\r\n    }\r\n\r\n    //update the price of product depending upon quantity and send it to Cart.js to update totalPrice\r\n    onchange(e){\r\n        let price=parseInt(document.getElementById(this.props.product._id+\"disPrice\").innerHTML)\r\n        if(e.target){\r\n        document.getElementById(this.props.product._id+\"disPrice\").innerHTML=(this.props.product.Price*(e.target.value?e.target.value:0))\r\n        }\r\n        else{\r\n            document.getElementById(this.props.product._id+\"disPrice\").innerHTML=(this.props.product.Price*(e?e:0))\r\n        }\r\n        let price1=parseInt(document.getElementById(this.props.product._id+\"disPrice\").innerHTML)\r\n        this.props.totalPrice(price,price1)\r\n    }\r\n\r\n    //delete product from cart\r\n    deleteFromCart(){\r\n        let customerId=localStorage.getItem(\"Ctoken\")\r\n        let productId=this.props.product._id\r\n        let category=this.props.category\r\n        let cart=\"Remove from Cart\"\r\n        axios.post(`https://garg-marble-server.herokuapp.com/customer/add/cart`,{customerId,productId,category,cart})\r\n        .then(res=>{\r\n            if(!(res.data.error || res.err)){\r\n                window.location.reload()\r\n            }\r\n            else{\r\n                this.props.notRefreshed(res.data.error)\r\n            }\r\n        }) \r\n    }\r\n    render() {\r\n        return (\r\n            <Row style={{marginBottom:\"7px\"}} className=\"col-7 offset-3 visibilityAccordance\" key={this.props.key}>\r\n                        <Col className=\"removePadding\" onClick={() => this.productDetail(this.props.product._id)}>\r\n                            <ImageLoader category={this.props.category} image={this.props.product.Image[0] ? this.props.product.Image[0] : null} length={1} />\r\n                        </Col>\r\n                        <Col onClick={() => this.productDetail(this.props.product._id)}>\r\n                            <div>\r\n                                <div className=\"sub\">\r\n                                    <span style={{color:\"#2f736c\",fontWeight:\"700\"}}>{this.props.product.Name}</span> <span style={{ fontWeight: \"400\", fontSize: \"12px\", color:\"#47918a\" }}> ({this.props.product.Size.Width}x{this.props.product.Size.Height})</span>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"body2\">\r\n                                    {this.props.product.Brand}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col onClick={() => this.productDetail(this.props.product._id)}>\r\n                            <div style={{paddingTop:\"30px\"}}><span style={{paddingRight:\"20px\"}}>Colour: </span><div style={{backgroundColor:this.props.product.Colors,width:\"20px\",height:\"20px\",borderRadius:\"10px\",border:\"3px solid #1f92b8\",display:\"inline-block\"}}></div></div>\r\n                        </Col>\r\n                        <Col>\r\n                        <div style={{position:\"absolute\",right:\"30px\"}}>\r\n                            <i onClick={()=>this.deleteFromCart()} className=\"fa fa-trash\" style={{color:\"red\",right:0}}></i>\r\n                        </div>\r\n                        <div style={{position:\"absolute\",bottom:\"20px\"}}>\r\n                            <div style={{color:\"#b8184e\",fontWeight:\"700\"}}>\r\n                                Price: <span id={this.props.product._id+\"disPrice\"} className={\"cartPrice\"}>{this.props.product.Price*this.props.quantity}</span>\r\n                            </div>\r\n                            Quantity:\r\n                            \r\n                            <div style={{display:\"inline-block\",border:\"3px solid black\",height:\"35px\",marginLeft:\"5px\"}}>\r\n                                <span>\r\n                                    <i onClick={()=>this.alterQuantity(1)} className=\"fa fa-plus\" style={{padding: \"2px 6px\",borderRight:\"1px solid black\"}}></i>\r\n                                </span>\r\n                                \r\n                                <input  style={{width:\"40px\",border:0,height:\"25px\"}}  onChange={this.onchange} name=\"quantity\" id={this.props.product._id} type=\"number\"/>\r\n                                \r\n                                <span >\r\n                                    <i onClick={()=>this.alterQuantity(-1)} className=\"fa fa-minus\" style={{padding: \"2px 6px\",borderLeft:\"1px solid black\"}}></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(CartDisplay);","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js",["132","133","134","135","136","137","138","139","140","141","142","143","144"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\n// import { Redirect } from 'react-router'\r\nimport { Button, Label, Col, Row, ModalBody, Modal} from 'reactstrap'\r\n// import { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst required = (val) => val && val.length\r\n// const maxlength = (len) => (val) => !val || val.length <= len\r\n// const minlength = (len)=>(val) => val ? val.length >= len : 1;\r\nconst validEmail = (val) => !(val)||/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst pass=(val) => !(val)||/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/i.test(val);\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModal:this.props.isModalOpen,\r\n            err: null,\r\n            error: null\r\n        }\r\n        this.toggleModal=this.toggleModal.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        // if (\"geolocation\" in navigator) {\r\n        //     console.log(\"Available\");\r\n        //     navigator.geolocation.getCurrentPosition(function(position) {\r\n        //         console.log(\"Latitude is :\", position.coords.latitude);\r\n        //         console.log(\"Longitude is :\", position.coords.longitude);\r\n        //       });\r\n        //   } else {\r\n        //     console.log(\"Not Available\");\r\n        //   }\r\n    }\r\n    async toggleModal(){\r\n        await this.setState({\r\n            isModal:!this.state.isModal\r\n        })\r\n        this.props.toggleModal()\r\n    }\r\n    submit(values) {\r\n        if (values.repassword) {\r\n            var custmer = {\r\n                first: values.first,\r\n                last: values.last,\r\n                email: values.Upemail,\r\n                password: values.Uppassword,\r\n                repassword: values.repassword,\r\n                number: values.number,\r\n                address: values.address,\r\n                pincode: values.pincode,\r\n                state: values.state,\r\n                city: values.city,\r\n                country: values.country\r\n            }\r\n            axios.post('https://garg-marble-server.herokuapp.com/customer/add', custmer)\r\n                .then(res => {\r\n                    if (res.data.err) {\r\n                        this.setState({\r\n                            err: res.data.err\r\n                        })\r\n                    }\r\n                    else if (res.data.data) {\r\n                        localStorage.setItem(\"Ctoken\",res.data.data._id)\r\n                        this.toggleModal()\r\n                        window.location.reload(true)\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            axios.post('https://garg-marble-server.herokuapp.com/customer/login', values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Ctoken\",res.data.data._id)\r\n                        this.toggleModal()\r\n                        window.location.reload(true)\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal style={{minWidth:\"80%\"}} isOpen={this.state.isModal} toggle={this.toggleModal}>\r\n                <ModalBody>\r\n                <Row className=\"col-12\">\r\n                    <Col className=\"col-12\">\r\n                        <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"home\" title=\"SignIn\">\r\n                                {this.state.error ?\r\n                                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                        <p>{this.state.error}</p>\r\n                                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </Button>\r\n                                    </div> : null}\r\n                                <LocalForm className=\"m-5\" onSubmit={this.submit}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col className=\"col-3\">\r\n                                            <Label htmlFor=\"email\"><span style={{color:\"red\"}}>*</span>Email Id: </Label>\r\n                                        </Col>\r\n                                        <Col className=\"col-6\">\r\n                                            <Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" validators={{ required, validEmail}}></Control.text>\r\n                                            <Errors className=\"text-danger\" show=\"touched\" model=\".email\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\",\r\n                                                    validEmail:\"Invalid Email\"\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{color:\"red\"}}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required,pass}} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\",\r\n                                                    pass:\"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                            </LocalForm>\r\n                        </Tab>\r\n                                <Tab eventKey=\"profile\" title=\"SignUp\">\r\n                                    {this.state.err ?\r\n                                        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                            <p>{this.state.err}</p>\r\n                                            <button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        </div> : null}\r\n                                    <LocalForm className=\"m-5\" onSubmit={this.submit}>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"first\"><span style={{color:\"red\"}}>*</span>First Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".first\" id=\"first\" name=\"first\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-3 col-lg-2 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"last\"><span style={{color:\"red\"}}>*</span>Last Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".last\" id=\"last\" name=\"last\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"Upemail\"><span style={{color:\"red\"}}>*</span>Email Id: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-8 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".Upemail\" id=\"Upemail\" name=\"Upemail\" validators={{required,validEmail}}></Control.text>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Upemail\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\",\r\n                                                    validEmail:\"Invalid Email\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"Uppassword\"><span style={{color:\"red\"}}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.password className=\"form-control\" model=\".Uppassword\" id=\"Uppassword\" name=\"Uppassword\" validators={{required,pass}}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Uppassword\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\",\r\n                                                    pass:\"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col className=\"col-3 col-lg-2 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"repassword\"><span style={{color:\"red\"}}>*</span>Re-Enter Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.password className=\"form-control\" model=\".repassword\" id=\"repassword\" name=\"repassword\" validators={{required,pass}}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".repassword\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\",\r\n                                                    pass:\"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group mt-lg-3\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"number\"><span style={{color:\"red\"}}>*</span>Phone No: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-8 m-2 m-lg-0\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".number\" id=\"number\" name=\"number\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <p style={{ color: \"orange\" }}>Remember you can not change your address later and this address will be considered as your shipping address.</p>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"address\"><span style={{color:\"red\"}}>*</span>Street Address: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-8 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".address\" id=\"address\" name=\"address\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"city\"><span style={{color:\"red\"}}>*</span>City/Town: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".city\" id=\"city\" name=\"city\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-3 col-lg-2 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"pincode\"><span style={{color:\"red\"}}>*</span>Pincode: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".pincode\" id=\"pincode\" name=\"pincode\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3 col-lg-3 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"state\"><span style={{color:\"red\"}}>*</span>State: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".state\" id=\"state\" name=\"state\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-3 col-lg-2 m-2 m-lg-0\">\r\n                                                <Label htmlFor=\"country\"><span style={{color:\"red\"}}>*</span>Country: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-8 col-lg-3 m-2 m-lg-0\">\r\n                                                <Control.text className=\"form-control\" model=\".country\" id=\"country\" name=\"country\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col className=\"col-11\">\r\n                                            <Button className=\"offset-md-5 offset-3 col-6 col-md-3 btn btn-lg btn-dark mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        {/* <Row>\r\n                                    <Map google={this.props.google} zoom={14}>\r\n\r\n                                        <Marker onClick={this.onMarkerClick}\r\n                                            name={'Current location'} /> */}\r\n\r\n                                        {/* <InfoWindow onClose={this.onInfoWindowClose}>\r\n                                            <div>\r\n                                                <h1>{this.state.selectedPlace.name}</h1>\r\n                                            </div>\r\n                                        </InfoWindow> */}\r\n                                        {/* </Map>\r\n                                </Row> */}\r\n\r\n                                    </LocalForm>\r\n\r\n                                </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n            </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Login;\r\n// export default GoogleApiWrapper({\r\n//     apiKey: (\"AIzaSyDPgfGuxoRXhQHaC9gJCk2SCt8SiZNJRMo\")\r\n//   })(Login)","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js",["145","146","147"],"import React, { Component } from 'react'\r\nimport { Card, CardBody, CardTitle, Col, Row } from 'reactstrap'\r\n\r\nimport { ImageLoader } from '../FunctionalComponent/ImageLoader'\r\n\r\nimport '../../css/ProductDisplay.css'\r\nimport axios from 'axios'\r\nclass ProductDisplay extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            isOpen:false,\r\n            color:\"lightgrey\",\r\n            notRefreshed:null\r\n        }\r\n        this.AddToWishlist = this.AddToWishlist.bind(this)\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.product.Customers){\r\n            this.props.product.Customers.map((customer)=>{\r\n                if(customer==localStorage.getItem('Ctoken')){\r\n                    this.setState({\r\n                        color:\"red\"\r\n                    })\r\n                    return;\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        color:\"lightgrey\"\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    AddToWishlist(e) {\r\n        let productId=e.target.id;\r\n        productId=productId.substring(0,productId.length-6)\r\n        let customerId=localStorage.getItem(\"Ctoken\")\r\n        let category=this.props.category\r\n        if(customerId){        \r\n            var color=window.getComputedStyle(document.getElementById(e.target.id), null).getPropertyValue('color')\r\n            axios.post(`https://garg-marble-server.herokuapp.com/customer/wishlist`,{customerId,productId,color,category})\r\n            .then(res=>{\r\n                    return;\r\n            })\r\n            axios.post(`https://garg-marble-server.herokuapp.com/${this.props.category}/addCustomer`,{productId,customerId,color})\r\n            .then(res=>{\r\n                if (res.data.message) {\r\n                    this.setState({\r\n                        notRefreshed:\"Please refresh the page. Some of the items has been Updated in Wishlist.\"\r\n                    })\r\n                }\r\n                else if(color === 'rgb(211, 211, 211)'){\r\n                    document.getElementById(e.target.id).style.color = \"red\";\r\n                    let corr=document.getElementById(e.target.id).getBoundingClientRect ()\r\n                    this.props.addanimation(true,corr.x,corr.y)\r\n                    this.setState({\r\n                        notRefreshed:null\r\n                    })\r\n                }\r\n                else{\r\n                    document.getElementById(e.target.id).style.color = \"lightgrey\";\r\n                    this.props.addanimation(false,null,null)\r\n                    this.setState({\r\n                        notRefreshed:null\r\n                    })\r\n                }\r\n                this.props.notRefreshed(this.state.notRefreshed)\r\n            })\r\n        }\r\n        else{\r\n            this.props.toggleModal();\r\n        }\r\n    }\r\n    productDetail(id){\r\n        window.open(`/${this.props.category}/detail/${id}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <Col className=\"col-12 col-lg-6 col-xl-3 mt-5\" key={this.props.key}>\r\n\r\n                {/* Will only be visible if window size is xs, sm or md */}\r\n                <Row onClick={()=>this.productDetail(this.props.product._id)} className=\"visibilityAccordance col-10 d-lg-none \">\r\n                    <Col className=\"removePadding\">\r\n                        <ImageLoader category={this.props.category} image={this.props.product.Image[0]?this.props.product.Image[0]:null} length={1}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <div variant=\"subtitle1\">\r\n                            <div className=\"sub\">\r\n                                {this.props.product.Name} <span style={{fontWeight:\"100\",fontSize:\"12px\"}}> {this.props.product.Size.Width}x{this.props.product.Size.Height} {this.props.product.Colors}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{fontWeight:\"100\",fontSize:\"12px\"}}>\r\n                                {this.props.product.Colors}\r\n                        </div>\r\n                        <div variant=\"bod2\">\r\n                            <div className=\"body2\">\r\n                                {this.props.product.Brand}\r\n                            </div>\r\n                        </div>\r\n                        </Col>\r\n                </Row>\r\n\r\n                {/* Will only be visible if window size is lg or xl */}\r\n                <Card className=\"shadow-lg mb-2 bg-white rounded visibilityAccess d-none d-lg-block\">\r\n                    <CardTitle id={this.props.product._id} onClick={()=>this.productDetail(this.props.product._id)} style={{padding:\"0px\"}}>\r\n                        <ImageLoader category={this.props.category} image={this.props.product.Image[0]?this.props.product.Image[0]:null} length={1} />\r\n                    </CardTitle>\r\n                    <CardBody id={this.props.product._id} style={{minHeight:\"110px\",maxHeight:\"fit-content\", paddingTop: \"0\" }}>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"subCard\">\r\n                                    {this.props.product.Name}   <span style={{fontWeight:\"100\",fontFamily:\"monospace\"}}>{this.props.product.Size.Width}x{this.props.product.Size.Height}</span>\r\n                                </div>\r\n                                <div style={{fontWeight:\"100\",fontFamily:\"monospace\",textAlign:\"left\"}}>\r\n                                    {this.props.product.Colors}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"body2Card\">\r\n                                    {this.props.product.Brand}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"col-12\">\r\n                                <div className=\"col-2 ml-auto\"><i id={this.props.product._id+\"button\"} onClick={this.AddToWishlist} class=\"fa fa-heart fa-2x\" style={{color:this.state.color}} aria-hidden=\"true\"></i></div>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDisplay;\r\n\r\n","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js",["148","149","150"],"import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\n\r\n\r\nexport function ColorLoader(props) {\r\n    function addColorSelection(category,colorProductId) {\r\n        // props.colorPrice(e.target.id)\r\n        // let circle=document.getElementsByClassName(\"rounded-circle\")\r\n        // let i=0\r\n        // while(circle[i]){\r\n        //     if(circle[i].id===e.target.id){\r\n        //         circle[i].innerHTML=\"<i class='fa fa-check' style={{color:'blue'}} aria-hidden='true'></i>\"\r\n        //     }\r\n        //     else{\r\n        //         circle[i].innerHTML=\"\"\r\n        //     }\r\n        //     i++;\r\n        // }\r\n        window.location.href=`/${category}/detail/${colorProductId}`\r\n    }\r\n    var array = []\r\n    var colors = props.color\r\n    \r\n    colors.map((c, i) => {\r\n        array.push(<Col className=\"m-auto col-2\"><p>{c}</p><div id={i} onClick={()=>addColorSelection(props.category,props.colorProductId[i])} style={{ display: \"inline\", margin: \"0px\" }} className=\"rounded-circle custom-circle\" style={{ backgroundColor: c }}>{props.currentProductId===props.colorProductId[i]?<i class='fa fa-check' aria-hidden='true'></i>:null}</div></Col>)\r\n    })\r\n    return array;\r\n\r\n}","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js",["151"],"import React from 'react';\r\nimport DynamicCarousel from '../CommonComponents/DynamicCarousel'\r\nexport function ImageLoader(props){\r\n\r\n    let image=\"https://garg-marble-server.herokuapp.com/\" + props.category + \"/\" + props.image\r\n\r\n    return(\r\n        <div>\r\n            {props.length==1?\r\n            <img id={props.id} className=\"image col-md-12\"\r\n            src={props.image!==null?image:null}\r\n            alt={props.image!==null?props.image:null}/>:\r\n            <DynamicCarousel category={props.category} image={props.image}/>}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { Component } from 'react';\r\nimport { Button, Col, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport Axios from 'axios';\r\n\r\nvar required = (val) => val && val.length;\r\nvar dataType = (val) => !(val) || /\\d+$/i.test(val);\r\nclass AddModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModal: this.props.isModalOpen\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleAddModal = this.toggleAddModal.bind(this)\r\n        this.addCost = this.addCost.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        const formData= new FormData();\r\n        formData.append('name',values.name)\r\n        formData.append(\"catalogue\",values.catalogue)\r\n        formData.append('width',values.width)\r\n        formData.append('Height',values.Height)\r\n        formData.append('material',values.material)\r\n        formData.append('warranty',values.warranty)\r\n        formData.append('brand',values.brand)\r\n        formData.append('desc',values.desc)\r\n        formData.append('features',values.features)\r\n        \r\n        formData.append('colors',values.colors)\r\n        let array=[]\r\n        let quantityArray=[]\r\n        let imageLength=[]\r\n        for(let i=0;i<values.colors.length;i++){\r\n            let price=\"price\"+values.colors[i]\r\n            let quantity=\"quantity\"+values.colors[i]\r\n            let im=\"image\"+values.colors[i]\r\n            if(values[im]){\r\n            for(var j=0;j<values[im].length;j++){\r\n                formData.append('file',values[im][j])\r\n            }\r\n            }\r\n            imageLength[i]=values[im] ? values[im].length : 0\r\n            array[i]=values[price]\r\n            quantityArray[i]=values[quantity]\r\n            \r\n        }\r\n        formData.append('price',array)\r\n        formData.append('quantity',quantityArray)\r\n        formData.append(\"imageLength\",[imageLength])\r\n        console.log(...formData)\r\n        Axios.post(`https://garg-marble-server.herokuapp.com/${this.props.category}/add`,formData)\r\n        .then(res=>{\r\n            // window.location.href=`https://garg-marble-server.herokuapp.com/${this.props.category}`\r\n            console.log(res.data)\r\n        })\r\n    }\r\n    async toggleAddModal() {\r\n        await this.setState({\r\n            isModal: !this.state.isModal\r\n        });\r\n\r\n        this.props.toggleAddModal(this.state.isModal)\r\n    }\r\n    async addCost(e) {\r\n        let option = document.getElementsByTagName(\"option\")\r\n        let i = 0\r\n        while (option[i]) {\r\n            if (option[i].selected) {\r\n                document.getElementById(\"price\" + option[i].value).classList.remove(\"d-none\")\r\n                document.getElementById(\"quantity\" + option[i].value).classList.remove(\"d-none\")\r\n                document.getElementById(\"image\" + option[i].value).classList.remove(\"d-none\")\r\n            }\r\n            else {\r\n                document.getElementById(\"price\" + option[i].value).classList.add(\"d-none\")\r\n                document.getElementById(\"quantity\" + option[i].value).classList.add(\"d-none\")\r\n                document.getElementById(\"image\" + option[i].value).classList.add(\"d-none\")\r\n            }\r\n            i = i + 1;\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal style={{ minWidth: \"60%\" }} isOpen={this.state.isModal} toggle={this.toggleAddModal}>\r\n                <ModalHeader\r\n                    style={{ backgroundColor: \"#3464eb\", color: \"white\" }}\r\n                    toggle={this.toggleAddModal}\r\n                >\r\n                    <h3>Add New {this.props.category.toUpperCase()}</h3>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"container\">\r\n                        <LocalForm encType=\"multipart/form-data\" onSubmit={this.handleSubmit} className=\"col-md-10\" validateOn=\"submit\">\r\n                            <Row className=\"form-group\" md={12}>\r\n                                <Label htmlFor=\"name\" md={3}><span style={{ color: \"red\" }}>* </span> Name: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".name\" id=\"name\" name=\"name\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".name\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"catalogue\" md={3}><span style={{ color: \"red\" }}>* </span> Catalogue No: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".catalogue\" id=\"catalogue\" name=\"catalogue\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".catalogue\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"size\"><span style={{ color: \"red\" }}>* </span> Size: </Label>\r\n                                <Col>\r\n                                    <Label htmlFor=\"width\"><span style={{ color: \"red\" }}>* </span> Width: </Label>\r\n                                    <Control.text className=\"form-control\" model=\".width\" id=\"width\" name=\"width\" validators={{ required, dataType }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".width\"\r\n                                        messages={{\r\n                                            required: \"This feild is required\",\r\n                                            dataType: \"Should be a Number\"\r\n                                        }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Label htmlFor=\"Height\"><span style={{ color: \"red\" }}>* </span> Height: </Label>\r\n                                    <Control.text className=\"form-control\" model=\".Height\" id=\"Height\" name=\"Height\" validators={{ required, dataType }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".Height\"\r\n                                        messages={{\r\n                                            required: \"This feild is required\",\r\n                                            dataType: \"Should be a Number\"\r\n                                        }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"colors\"><span style={{ color: \"red\" }}>* </span> Colors: </Label>\r\n                                <Col>\r\n                                    <Control.select onBlur={this.addCost} multiple class=\"form-control\" id=\"colors\" model=\".colors\" name=\"colors\" validators={{ required }}>\r\n                                        <option>White</option>\r\n                                        <option>Black</option>\r\n                                        <option>Grey</option>\r\n                                        <option>Ivory</option>\r\n                                        <option>Blue</option>\r\n                                    </Control.select>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".colors\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"price[]\"><span style={{ color: \"red\" }}>* </span> Price: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">\r\n                                    <Row className=\"col-12\">\r\n                                        <Col id=\"priceBlack\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceBlack\"><span style={{ color: \"red\" }}>* </span> Black: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".priceBlack\" name=\"price[]\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceWhite\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceWhite\"><span style={{ color: \"red\" }}>* </span> White: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".priceWhite\" name=\"priceWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceGrey\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceGrey\"><span style={{ color: \"red\" }}>* </span> Grey: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceGrey\" name=\"priceGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceBlue\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceBlue\"><span style={{ color: \"red\" }}>* </span> Blue: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceBlue\" name=\"priceBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceIvory\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceIvory\"><span style={{ color: \"red\" }}>* </span> Ivory: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceIvory\" name=\"priceIvory\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"brand\"><span style={{ color: \"red\" }}>* </span> Brand: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".brand\" id=\"brand\" name=\"brand\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".brand\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"image\">Image: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">                                \r\n                                        <Col id=\"imageBlack\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageBlack\">Black: </Label>\r\n                                            <Control.file multiple className=\"form-control\" model=\".imageBlack\" name=\"imageBlack\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageWhite\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageWhite\">White: </Label>\r\n                                            <Control.file multiple className=\"form-control\" model=\".imageWhite\" name=\"imageWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageGrey\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageGrey\">Grey: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageGrey\" name=\"imageGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageBlue\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageBlue\">Blue: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageBlue\" name=\"imageBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageIvory\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageIvory\">Ivory: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageIvory\" name=\"imageIvory\" />\r\n                                        </Col>     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"quantity\"><span style={{ color: \"red\" }}>* </span> Quantity: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">                                \r\n                                        <Col id=\"quantityBlack\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityBlack\">Black: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".quantityBlack\" name=\"quantityBlack\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityWhite\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityWhite\">White: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".quantityWhite\" name=\"quantityWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityGrey\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityGrey\">Grey: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityGrey\" name=\"quantityGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityBlue\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityBlue\">Blue: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityBlue\" name=\"quantityBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityIvory\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityIvory\">Ivory: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityIvory\" name=\"quantityIvory\" />\r\n                                        </Col>     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"warranty\"><span style={{ color: \"red\" }}>* </span> Warranty:</Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".warranty\" id=\"warranty\" name=\"warranty\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".warranty\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Label md={3} htmlFor=\"material\">Material: </Label>\r\n                                <Col>\r\n                                    <Control.text name=\"material\" className=\"form-control\" model=\".material\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"desc\">Description: </Label>\r\n                                <Col>\r\n                                    <Control.textarea rows=\"5\" className=\"form-control\" model=\".desc\" id=\"desc\" name=\"desc\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"features\">Features: </Label>\r\n                                <Col>\r\n                                    <Control.textarea rows=\"5\" className=\"form-control\" model=\".features\" id=\"features\" name=\"features\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ offset: 4 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js",[],{"ruleId":"177","severity":1,"message":"178","line":17,"column":17,"nodeType":"179","messageId":"180","endLine":17,"endColumn":171},{"ruleId":"177","severity":1,"message":"178","line":50,"column":45,"nodeType":"179","messageId":"180","endLine":50,"endColumn":154},{"ruleId":"177","severity":1,"message":"181","line":63,"column":49,"nodeType":"179","messageId":"180","endLine":63,"endColumn":166},{"ruleId":"182","severity":1,"message":"183","line":87,"column":68,"nodeType":"184","messageId":"185","endLine":87,"endColumn":70},{"ruleId":"182","severity":1,"message":"186","line":93,"column":49,"nodeType":"187","messageId":"188","endLine":93,"endColumn":56},{"ruleId":"189","severity":1,"message":"190","line":160,"column":33,"nodeType":"191","messageId":"192","endLine":160,"endColumn":35},{"ruleId":"177","severity":1,"message":"178","line":240,"column":33,"nodeType":"179","messageId":"180","endLine":240,"endColumn":111},{"ruleId":"193","severity":1,"message":"194","line":119,"column":33,"nodeType":"179","endLine":119,"endColumn":123},{"ruleId":"193","severity":1,"message":"194","line":124,"column":33,"nodeType":"179","endLine":124,"endColumn":120},{"ruleId":"177","severity":1,"message":"178","line":134,"column":33,"nodeType":"179","messageId":"180","endLine":134,"endColumn":111},{"ruleId":"195","severity":1,"message":"196","line":7,"column":10,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"199","line":7,"column":19,"nodeType":"197","messageId":"198","endLine":7,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":109,"column":45,"nodeType":"179","messageId":"180","endLine":109,"endColumn":160},{"ruleId":"177","severity":1,"message":"181","line":123,"column":49,"nodeType":"179","messageId":"180","endLine":123,"endColumn":171},{"ruleId":"177","severity":1,"message":"178","line":151,"column":49,"nodeType":"179","messageId":"180","endLine":151,"endColumn":136},{"ruleId":"177","severity":1,"message":"178","line":157,"column":49,"nodeType":"179","messageId":"180","endLine":157,"endColumn":133},{"ruleId":"177","severity":1,"message":"178","line":165,"column":49,"nodeType":"179","messageId":"180","endLine":165,"endColumn":168},{"ruleId":"177","severity":1,"message":"181","line":179,"column":49,"nodeType":"179","messageId":"180","endLine":179,"endColumn":175},{"ruleId":"177","severity":1,"message":"181","line":191,"column":49,"nodeType":"179","messageId":"180","endLine":191,"endColumn":175},{"ruleId":"177","severity":1,"message":"178","line":205,"column":49,"nodeType":"179","messageId":"180","endLine":205,"endColumn":153},{"ruleId":"177","severity":1,"message":"178","line":214,"column":49,"nodeType":"179","messageId":"180","endLine":214,"endColumn":142},{"ruleId":"177","severity":1,"message":"178","line":222,"column":49,"nodeType":"179","messageId":"180","endLine":222,"endColumn":133},{"ruleId":"177","severity":1,"message":"178","line":228,"column":49,"nodeType":"179","messageId":"180","endLine":228,"endColumn":156},{"ruleId":"177","severity":1,"message":"178","line":236,"column":49,"nodeType":"179","messageId":"180","endLine":236,"endColumn":136},{"ruleId":"177","severity":1,"message":"178","line":242,"column":49,"nodeType":"179","messageId":"180","endLine":242,"endColumn":142},{"ruleId":"182","severity":1,"message":"183","line":21,"column":56,"nodeType":"184","messageId":"185","endLine":21,"endColumn":58},{"ruleId":"189","severity":1,"message":"190","line":22,"column":28,"nodeType":"191","messageId":"192","endLine":22,"endColumn":30},{"ruleId":"182","severity":1,"message":"186","line":26,"column":21,"nodeType":"187","messageId":"188","endLine":26,"endColumn":28},{"ruleId":"195","severity":1,"message":"200","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"186","line":24,"column":23,"nodeType":"184","messageId":"201","endLine":24,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":25,"column":230,"nodeType":"204","messageId":"205","endLine":25,"endColumn":260},{"ruleId":"189","severity":1,"message":"190","line":9,"column":26,"nodeType":"191","messageId":"192","endLine":9,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":98,"column":37,"nodeType":"179","messageId":"180","endLine":98,"endColumn":138},{"ruleId":"177","severity":1,"message":"178","line":107,"column":37,"nodeType":"179","messageId":"180","endLine":107,"endColumn":153},{"ruleId":"177","severity":1,"message":"178","line":117,"column":37,"nodeType":"179","messageId":"180","endLine":117,"endColumn":151},{"ruleId":"177","severity":1,"message":"178","line":127,"column":37,"nodeType":"179","messageId":"180","endLine":127,"endColumn":154},{"ruleId":"177","severity":1,"message":"206","line":139,"column":37,"nodeType":"179","messageId":"180","endLine":139,"endColumn":173},{"ruleId":"177","severity":1,"message":"178","line":157,"column":45,"nodeType":"179","messageId":"180","endLine":157,"endColumn":135},{"ruleId":"177","severity":1,"message":"178","line":161,"column":45,"nodeType":"179","messageId":"180","endLine":161,"endColumn":138},{"ruleId":"177","severity":1,"message":"178","line":165,"column":45,"nodeType":"179","messageId":"180","endLine":165,"endColumn":132},{"ruleId":"177","severity":1,"message":"178","line":169,"column":45,"nodeType":"179","messageId":"180","endLine":169,"endColumn":132},{"ruleId":"177","severity":1,"message":"178","line":173,"column":45,"nodeType":"179","messageId":"180","endLine":173,"endColumn":134},{"ruleId":"177","severity":1,"message":"178","line":181,"column":37,"nodeType":"179","messageId":"180","endLine":181,"endColumn":141},{"ruleId":"177","severity":1,"message":"207","line":192,"column":45,"nodeType":"179","messageId":"180","endLine":192,"endColumn":133},{"ruleId":"177","severity":1,"message":"207","line":196,"column":45,"nodeType":"179","messageId":"180","endLine":196,"endColumn":133},{"ruleId":"177","severity":1,"message":"207","line":200,"column":45,"nodeType":"179","messageId":"180","endLine":200,"endColumn":127},{"ruleId":"177","severity":1,"message":"207","line":204,"column":45,"nodeType":"179","messageId":"180","endLine":204,"endColumn":127},{"ruleId":"177","severity":1,"message":"207","line":208,"column":45,"nodeType":"179","messageId":"180","endLine":208,"endColumn":129},{"ruleId":"177","severity":1,"message":"178","line":217,"column":45,"nodeType":"179","messageId":"180","endLine":217,"endColumn":144},{"ruleId":"177","severity":1,"message":"178","line":221,"column":45,"nodeType":"179","messageId":"180","endLine":221,"endColumn":144},{"ruleId":"177","severity":1,"message":"178","line":225,"column":45,"nodeType":"179","messageId":"180","endLine":225,"endColumn":138},{"ruleId":"177","severity":1,"message":"178","line":229,"column":45,"nodeType":"179","messageId":"180","endLine":229,"endColumn":138},{"ruleId":"177","severity":1,"message":"178","line":233,"column":45,"nodeType":"179","messageId":"180","endLine":233,"endColumn":140},{"ruleId":"177","severity":1,"message":"178","line":240,"column":37,"nodeType":"179","messageId":"180","endLine":240,"endColumn":150},{"ruleId":"177","severity":1,"message":"178","line":249,"column":37,"nodeType":"179","messageId":"180","endLine":249,"endColumn":112},{"ruleId":"177","severity":1,"message":"208","line":255,"column":37,"nodeType":"179","messageId":"180","endLine":255,"endColumn":125},{"ruleId":"177","severity":1,"message":"208","line":261,"column":37,"nodeType":"179","messageId":"180","endLine":261,"endColumn":137},"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Control' is defined but never used.","Identifier","unusedVar","'LocalForm' is defined but never used.","'Component' is defined but never used.","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE"]