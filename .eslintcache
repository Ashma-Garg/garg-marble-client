[{"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js":"1","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js":"2","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js":"3","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js":"4","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js":"5","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js":"6","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js":"7","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js":"8","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js":"9","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js":"10","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js":"11","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js":"12","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js":"13","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js":"14","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js":"15","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js":"16","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js":"17","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js":"18","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js":"19","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js":"20","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js":"21","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js":"22","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js":"23","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js":"24","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js":"25","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js":"26","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\shared\\constant.js":"27","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchBar.js":"28","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js":"29","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchResults.js":"30"},{"size":645,"mtime":1622888325781,"results":"31","hashOfConfig":"32"},{"size":318,"mtime":1622888280311,"results":"33","hashOfConfig":"32"},{"size":1578,"mtime":1623446486901,"results":"34","hashOfConfig":"32"},{"size":3732,"mtime":1623447987262,"results":"35","hashOfConfig":"32"},{"size":3714,"mtime":1623446571634,"results":"36","hashOfConfig":"32"},{"size":3741,"mtime":1623446627902,"results":"37","hashOfConfig":"32"},{"size":4858,"mtime":1623446539574,"results":"38","hashOfConfig":"32"},{"size":7505,"mtime":1623446415417,"results":"39","hashOfConfig":"32"},{"size":9211,"mtime":1623447828415,"results":"40","hashOfConfig":"32"},{"size":4337,"mtime":1621971357153,"results":"41","hashOfConfig":"32"},{"size":10615,"mtime":1623446717984,"results":"42","hashOfConfig":"32"},{"size":3608,"mtime":1622063426617,"results":"43","hashOfConfig":"32"},{"size":5423,"mtime":1623446181273,"results":"44","hashOfConfig":"32"},{"size":10050,"mtime":1622399254190,"results":"45","hashOfConfig":"32"},{"size":2091,"mtime":1621113765662,"results":"46","hashOfConfig":"32"},{"size":18150,"mtime":1622397568174,"results":"47","hashOfConfig":"32"},{"size":6632,"mtime":1622068235115,"results":"48","hashOfConfig":"32"},{"size":9257,"mtime":1621977468048,"results":"49","hashOfConfig":"32"},{"size":1215,"mtime":1622065409094,"results":"50","hashOfConfig":"32"},{"size":1155,"mtime":1622067390231,"results":"51","hashOfConfig":"32"},{"size":616,"mtime":1622666700059,"results":"52","hashOfConfig":"32"},{"size":17930,"mtime":1621980652992,"results":"53","hashOfConfig":"32"},{"size":345,"mtime":1621113765665,"results":"54","hashOfConfig":"32"},{"size":1178,"mtime":1621971330462,"results":"55","hashOfConfig":"32"},{"size":429,"mtime":1622067556783,"results":"56","hashOfConfig":"32"},{"size":1036,"mtime":1621113765657,"results":"57","hashOfConfig":"32"},{"size":110,"mtime":1623448442229,"results":"58","hashOfConfig":"32"},{"size":3811,"mtime":1623447277409,"results":"59","hashOfConfig":"32"},{"size":6041,"mtime":1622366878553,"results":"60","hashOfConfig":"32"},{"size":3847,"mtime":1623449354796,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1bv9h8u",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\index.js",[],["130","131"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\App.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Mains.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Washbasin.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Taps.js",["132"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Toilet.js",["133"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Profile.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Cart.js",["134"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Homepage.js",["135"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\LoginOwner.js",["136","137"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { Button, Label, Col, Row} from 'reactstrap'\r\n\r\nimport {url} from '../shared/constant'\r\n\r\nconst required = (val) => val && val.length\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null\r\n        }\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    submit(values) {\r\n            axios.post(`${url}/owner/login`, values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Otoken\",res.data.data._id)\r\n                        window.location.href=\"/\"\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n    }\r\n    render() {\r\n        return (\r\n                <Row className=\"col-12\">\r\n                    <Col className=\"col-12\">\r\n                        <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <Tab eventKey=\"home\" title=\"SignIn\">\r\n                                {this.state.error ?\r\n                                    <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                        <p>{this.state.error}</p>\r\n                                        <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </Button>\r\n                                    </div> : null}\r\n                                <LocalForm className=\"m-5\" onSubmit={this.submit}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col className=\"col-3\">\r\n                                            <Label htmlFor=\"username\"><span style={{color:\"red\"}}>*</span>Username: </Label>\r\n                                        </Col>\r\n                                        <Col className=\"col-6\">\r\n                                            <Control.text className=\"form-control\" model=\".username\" id=\"email\" name=\"username\" validators={{ required}}></Control.text>\r\n                                            <Errors className=\"text-danger\" show=\"touched\" model=\".username\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{color:\"red\"}}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required}} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                messages={{\r\n                                                    required: \"This Field is mandatory\"\r\n                                                }}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                            </LocalForm>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default Login;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Detail.js",["138","139","140"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\BrandProducts.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Wishlist.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideNavbar.js",["141","142","143","144","145","146","147","148","149"],"import React from 'react'\r\nimport { Button, Row, Table } from 'reactstrap'\r\nimport { Control, LocalForm } from 'react-redux-form';\r\n\r\nimport { Brands } from '../FunctionalComponent/functionHelper'\r\nimport Login from '../Login'\r\nimport '../../css/SideNavbar.css'\r\nimport SubMenu from './Submenu'\r\n\r\n\r\nclass SideNavbar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dropmenu1: Brands('washbasin'),\r\n            dropmenu2: Brands('toilet'),\r\n            dropmenu3: Brands('taps'),\r\n            dropdown1: false,\r\n            dropdown2: false,\r\n            dropdown3: false,\r\n            showsearch: null,\r\n            isModalOpen: false\r\n\r\n        }\r\n        this.logoutCustomer = this.logoutCustomer.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.toggleSideNav = this.toggleSideNav.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        let customerId = localStorage.getItem(\"Ctoken\") ? localStorage.getItem(\"Ctoken\") : null;\r\n        if (customerId) {\r\n            document.getElementById(\"customerLogOut\").style.display = \"block\"\r\n            document.getElementById(\"customerLogIn\").style.display = \"none\"\r\n        }\r\n        else {\r\n            document.getElementById(\"customerLogOut\").style.display = \"none\"\r\n            document.getElementById(\"customerLogIn\").style.display = \"block\"\r\n        }\r\n        //     // this if else condition is for sidenavbar display\r\n        //     if (this.props.showsearch) {\r\n        //         this.setState({\r\n        //             showSearch: \"none\"\r\n        //         })\r\n\r\n        //     }\r\n        //     else {\r\n        //         this.setState({\r\n        //             showSearch: \"block\"\r\n        //         })\r\n        //         var ele = document.getElementsByClassName(\"menu\")\r\n        //         ele[0].classList.add(\"active\")\r\n        //     }\r\n    }\r\n    // componentDidUpdate(){\r\n\r\n    // }\r\n    async toggleSubMenu(id) {\r\n        await this.setState({\r\n            [id]: !this.state[`${id}`]\r\n        })\r\n        if (id === \"dropdown1\") {\r\n            this.setState({\r\n                dropdown2: false,\r\n                dropdown3: false\r\n            })\r\n        }\r\n        else if (id === \"dropdown2\") {\r\n            this.setState({\r\n                dropdown1: false,\r\n                dropdown3: false\r\n            })\r\n        }\r\n        else if (id === \"dropdown3\") {\r\n            this.setState({\r\n                dropdown2: false,\r\n                dropdown1: false\r\n            })\r\n        }\r\n    }\r\n    logoutCustomer() {\r\n        localStorage.removeItem(\"Ctoken\")\r\n        this.setState({\r\n            userName: null\r\n        })\r\n        window.location.reload(true)\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n    toggleSideNav() {\r\n        if (this.state.active) {\r\n            let elem = document.getElementsByClassName(\"menu\")\r\n            elem[0].classList.remove(\"active\");\r\n\r\n            let e = document.getElementsByClassName(\"searchBar\")\r\n            e[0].classList.remove(\"col-9\", \"col-xl-8\", \"offset-3\", \"offset-xl-3\")\r\n            e[0].classList.add(\"col-10\", \"m-auto\")\r\n\r\n            // let el = document.getElementsByClassName(\"rowSize\")\r\n            // el[0].classList.add(\"col-11\", \"col-xl-11\", \"m-auto\")\r\n            // el[0].classList.remove(\"col-8\", \"col-xl-10\", \"ml-auto\", \"mr-xl-1\")\r\n        }\r\n        else {\r\n            let elem = document.getElementsByClassName(\"menu\")\r\n            elem[0].classList.add(\"active\");\r\n\r\n            let e = document.getElementsByClassName(\"searchBar\")\r\n            e[0].classList.remove(\"col-10\", \"m-auto\")\r\n            e[0].classList.add(\"col-9\", \"col-xl-8\", \"offset-3\", \"offset-xl-3\")\r\n\r\n            // let el = document.getElementsByClassName(\"rowSize\")\r\n            // el[0].classList.add(\"col-8\", \"col-xl-10\", \"ml-auto\", \"mr-5\", \"mr-xl-1\")\r\n            // el[0].classList.remove(\"col-11\", \"col-xl-11\", \"m-auto\")\r\n        }\r\n        this.setState({\r\n            active: !this.state.active\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <nav className=\"menu\" style={{width:\"245px\"}}>\r\n                    <ul className=\"nav flex-column overflow-scroll flex-nowrap sideNavUL\">\r\n                        <Table>\r\n                            <tr>\r\n                                <td>\r\n                                    <li id=\"business\">\r\n                                        <a href=\"/\">Garg Marble & Sanitary House</a>\r\n                                    </li>\r\n                                </td>\r\n                                <td><Button onClick={this.toggleSideNav} className=\"toggle-button ml-2 mt-1\" title=\"Toggle Side Navbar\"><i class=\"fa fa-bars p-0\" aria-hidden=\"true\"></i></Button></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href='/'>Home</a>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\"><a href=\"/\"><i className=\"fa fa-home fa-3x\"></i></a></li>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link d-inline-block\" href=\"/washbasin\">Washbasin</a><span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown1\")}></span>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\"><a href=\"/washbasin\"><img src=\"https://img.icons8.com/color/48/000000/sink.png\" /></a></li>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{border:0}} colSpan=\"2\">{this.state.dropdown1 && <SubMenu category=\"washbasin\" list={this.state.dropmenu1} />}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link d-inline-block\" href=\"/toilet\">Toilet </a> <span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown2\")}></span>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\"><a href=\"/toilet\"><img src=\"https://img.icons8.com/fluent/48/000000/toilet-bowl.png\" /></a></li>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{border:0}} colSpan=\"2\">{this.state.dropdown2 && <SubMenu category=\"toilet\" list={this.state.dropmenu2} />}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link d-inline-block\" href=\"/taps\">Taps </a> <span class=\"dropdown-toggle\" style={{ color: \"white\" }} onClick={() => this.toggleSubMenu(\"dropdown3\")}></span>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\"><a href=\"/taps\"><img src=\"https://img.icons8.com/fluent/48/000000/piping.png\" /></a></li>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{border:0}} colSpan=\"2\">{this.state.dropdown3 && <SubMenu category=\"taps\" list={this.state.dropmenu3} />}</td>\r\n                            </tr>\r\n                            </Table>\r\n                            <Table className=\"mt-auto\">\r\n                            <tr id=\"customerLogOut\">\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link d-inline-block\" onClick={this.logoutCustomer} style={{ cursor: \"pointer\" }}>LogOut Account</a>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\"><a onClick={this.logoutCustomer}><i title=\"LogOut\" style={{color:\"white\"}} className=\"fa fa-sign-out fa-3x ml-auto\"></i></a></li>\r\n                                </td>\r\n                            </tr>\r\n                            <tr id=\"customerLogIn\">\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link d-inline-block\" onClick={this.toggleModal} style={{ cursor: \"pointer\" }}>LogIn Account</a>\r\n                                    </li>\r\n                                </td>\r\n                                <td>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={this.toggleModal}><i title=\"LogIn\" style={{color:\"white\"}} className=\"fa ml-auto fa-sign-in fa-3x\"></i></a>\r\n                                    </li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </ul>\r\n                </nav>\r\n                {this.state.isModalOpen && <Login isModalOpen={this.state.isModalOpen} toggleModal={() => this.toggleModal()} />}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNavbar;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SideBar.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Login.js",["150","151","152","153","154","155","156","157","158","159","160","161","162"],"import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\n// import { Redirect } from 'react-router'\r\nimport { Button, Label, Col, Row, ModalBody, Modal } from 'reactstrap'\r\n// import { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport { url } from '../shared/constant'\r\n\r\nconst required = (val) => val && val.length\r\n// const maxlength = (len) => (val) => !val || val.length <= len\r\n// const minlength = (len)=>(val) => val ? val.length >= len : 1;\r\nconst validEmail = (val) => !(val) || /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst pass = (val) => !(val) || /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/i.test(val);\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModal: this.props.isModalOpen,\r\n            err: null,\r\n            error: null\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        // if (\"geolocation\" in navigator) {\r\n        //     console.log(\"Available\");\r\n        //     navigator.geolocation.getCurrentPosition(function(position) {\r\n        //         console.log(\"Latitude is :\", position.coords.latitude);\r\n        //         console.log(\"Longitude is :\", position.coords.longitude);\r\n        //       });\r\n        //   } else {\r\n        //     console.log(\"Not Available\");\r\n        //   }\r\n    }\r\n    async toggleModal() {\r\n        await this.setState({\r\n            isModal: !this.state.isModal\r\n        })\r\n        this.props.toggleModal()\r\n    }\r\n    submit(values) {\r\n        if (values.repassword) {\r\n            var custmer = {\r\n                first: values.first,\r\n                last: values.last,\r\n                email: values.Upemail,\r\n                password: values.Uppassword,\r\n                repassword: values.repassword,\r\n                number: values.number,\r\n                address: values.address,\r\n                pincode: values.pincode,\r\n                state: values.state,\r\n                city: values.city,\r\n                country: values.country\r\n            }\r\n            axios.post(`${url}/customer/add`, custmer)\r\n                .then(res => {\r\n                    if (res.data.err) {\r\n                        this.setState({\r\n                            err: res.data.err\r\n                        })\r\n                    }\r\n                    else if (res.data.data) {\r\n                        localStorage.setItem(\"Ctoken\", res.data.data._id)\r\n                        this.toggleModal()\r\n                        window.location.reload(true)\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            axios.post(`${url}/customer/login`, values)\r\n                .then(res => {\r\n                    if (res.data.data) {\r\n                        localStorage.setItem(\"Ctoken\", res.data.data._id)\r\n                        this.toggleModal()\r\n                        window.location.reload(true)\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            error: res.data.err\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal style={{ minWidth: \"80%\",height:\"fit-content\" }} isOpen={this.state.isModal} toggle={this.toggleModal}>\r\n                <ModalBody>\r\n                    <Row className=\"col-12\">\r\n                        <Col className=\"col-12\">\r\n                            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                                <Tab eventKey=\"home\" title=\"SignIn\" style={{ marginTop: \"2rem\" }}>\r\n                                    {this.state.error ?\r\n                                        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                            <p>{this.state.error}</p>\r\n                                            <Button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </Button>\r\n                                        </div> : null}\r\n                                    <LocalForm onSubmit={this.submit}>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-md-3\">\r\n                                                <Label htmlFor=\"email\"><span style={{ color: \"red\" }}>*</span>Email Id: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-md-6\">\r\n                                                <Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" validators={{ required, validEmail }}></Control.text>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".email\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        validEmail: \"Invalid Email\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-12 col-md-3\">\r\n                                                <Label htmlFor=\"password\"><span style={{ color: \"red\" }}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-md-6\">\r\n                                                <Control.password className=\"form-control\" model=\".password\" id=\"password\" name=\"password\" validators={{ required, pass }} ></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".password\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <Button className=\"btn btn-lg btn-primary mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                        </Col>\r\n                                    </LocalForm>\r\n                                </Tab>\r\n                                <Tab eventKey=\"profile\" title=\"SignUp\" style={{marginTop:\"2rem\"}}>\r\n                                    {this.state.err ?\r\n                                        <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                            <p>{this.state.err}</p>\r\n                                            <button className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                                <span aria-hidden=\"true\">&times;</span>\r\n                                            </button>\r\n                                        </div> : null}\r\n                                    <LocalForm onSubmit={this.submit}>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"first\"><span style={{ color: \"red\" }}>*</span>First Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".first\" id=\"first\" name=\"first\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"last\"><span style={{ color: \"red\" }}>*</span>Last Name: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".last\" id=\"last\" name=\"last\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"Upemail\"><span style={{ color: \"red\" }}>*</span>Email Id: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text className=\"form-control\" model=\".Upemail\" id=\"Upemail\" name=\"Upemail\" validators={{ required, validEmail }}></Control.text>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Upemail\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        validEmail: \"Invalid Email\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-3 col-sm-3\">\r\n                                                <Label htmlFor=\"Uppassword\"><span style={{ color: \"red\" }}>*</span>Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.password className=\"form-control\" model=\".Uppassword\" id=\"Uppassword\" name=\"Uppassword\" validators={{ required, pass }}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".Uppassword\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"repassword\"><span style={{ color: \"red\" }}>*</span>Re-Enter Password: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.password className=\"form-control\" model=\".repassword\" id=\"repassword\" name=\"repassword\" validators={{ required, pass }}></Control.password>\r\n                                                <Errors className=\"text-danger\" show=\"touched\" model=\".repassword\"\r\n                                                    messages={{\r\n                                                        required: \"This Field is mandatory\",\r\n                                                        pass: \"Should contain uppercase, lowercase, number and special character and 8<=length<=15\"\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group mt-sm-3\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"number\"><span style={{ color: \"red\" }}>*</span>Phone No: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".number\" id=\"number\" name=\"number\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <p style={{ color: \"orange\" }}>Remember you can not change your address later and this address will be considered as your shipping address.</p>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"address\"><span style={{ color: \"red\" }}>*</span>Street Address: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-9\">\r\n                                                <Control.text className=\"form-control\" model=\".address\" id=\"address\" name=\"address\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"city\"><span style={{ color: \"red\" }}>*</span>City/Town: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".city\" id=\"city\" name=\"city\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"pincode\"><span style={{ color: \"red\" }}>*</span>Pincode: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text type=\"number\" className=\"form-control\" model=\".pincode\" id=\"pincode\" name=\"pincode\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row class=\"form-group\">\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"state\"><span style={{ color: \"red\" }}>*</span>State: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".state\" id=\"state\" name=\"state\" required></Control.text>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Label htmlFor=\"country\"><span style={{ color: \"red\" }}>*</span>Country: </Label>\r\n                                            </Col>\r\n                                            <Col className=\"col-12 col-sm-3\">\r\n                                                <Control.text className=\"form-control\" model=\".country\" id=\"country\" name=\"country\" required></Control.text>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col className=\"col-11\">\r\n                                                <Button className=\"offset-md-5 offset-3 col-6 col-md-3 btn btn-lg btn-dark mt-5 mb-3\" type=\"submit\">Submit</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {/* <Row>\r\n                                    <Map google={this.props.google} zoom={14}>\r\n\r\n                                        <Marker onClick={this.onMarkerClick}\r\n                                            name={'Current location'} /> */}\r\n\r\n                                        {/* <InfoWindow onClose={this.onInfoWindowClose}>\r\n                                            <div>\r\n                                                <h1>{this.state.selectedPlace.name}</h1>\r\n                                            </div>\r\n                                        </InfoWindow> */}\r\n                                        {/* </Map>\r\n                                </Row> */}\r\n\r\n                                    </LocalForm>\r\n\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default Login;\r\n// export default GoogleApiWrapper({\r\n//     apiKey: (\"AIzaSyDPgfGuxoRXhQHaC9gJCk2SCt8SiZNJRMo\")\r\n//   })(Login)","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\ProductsDisplay.js",["163","164","165"],"import React, { Component } from 'react'\r\nimport { Card, CardBody, CardTitle, Col, Row } from 'reactstrap'\r\nimport axios from 'axios'\r\n\r\nimport {url} from '../../shared/constant'\r\n\r\nimport { ImageLoader } from '../FunctionalComponent/ImageLoader'\r\nimport '../../css/ProductDisplay.css'\r\n\r\nclass ProductDisplay extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            isOpen:false,\r\n            color:\"lightgrey\",\r\n            notRefreshed:null\r\n        }\r\n        this.AddToWishlist = this.AddToWishlist.bind(this)\r\n    }\r\n    componentDidMount(){\r\n\r\n        if(this.props.product.Customers){\r\n            this.props.product.Customers.map((customer)=>{\r\n                if(customer==localStorage.getItem('Ctoken')){\r\n                    this.setState({\r\n                        color:\"red\"\r\n                    })\r\n                    return;\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        color:\"lightgrey\"\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    AddToWishlist(e) {\r\n        let productId=e.target.id;\r\n        productId=productId.substring(0,productId.length-6)\r\n        let customerId=localStorage.getItem(\"Ctoken\")\r\n        let category=this.props.category\r\n        if(customerId){        \r\n            var color=window.getComputedStyle(document.getElementById(e.target.id), null).getPropertyValue('color')\r\n            axios.post(`${url}/customer/wishlist`,{customerId,productId,color,category})\r\n            .then(res=>{\r\n                    return;\r\n            })\r\n            axios.post(`${url}/${this.props.category}/addCustomer`,{productId,customerId,color})\r\n            .then(res=>{\r\n                if (res.data.message) {\r\n                    this.setState({\r\n                        notRefreshed:\"Please refresh the page. Some of the items has been Updated in Wishlist.\"\r\n                    })\r\n                }\r\n                else if(color === 'rgb(211, 211, 211)'){\r\n                    document.getElementById(e.target.id).style.color = \"red\";\r\n                    let corr=document.getElementById(e.target.id).getBoundingClientRect ()\r\n                    this.props.addanimation(true,corr.x,corr.y)\r\n                    this.setState({\r\n                        notRefreshed:null\r\n                    })\r\n                }\r\n                else{\r\n                    document.getElementById(e.target.id).style.color = \"lightgrey\";\r\n                    this.props.addanimation(false,null,null)\r\n                    this.setState({\r\n                        notRefreshed:null\r\n                    })\r\n                }\r\n                this.props.notRefreshed(this.state.notRefreshed)\r\n            })\r\n        }\r\n        else{\r\n            this.props.toggleModal();\r\n        }\r\n    }\r\n    productDetail(id){\r\n        window.open(`/${this.props.category}/detail/${id}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <Col className=\"col-12 col-sm-5 col-lg-4 col-xl-2 m-1 m-lg-auto m-xl-2\" key={this.props.key}>\r\n\r\n                {/* Will only be visible if window size is xs, sm */}\r\n                <Row onClick={()=>this.productDetail(this.props.product._id)} className=\"visibilityAccordance col-10 d-sm-none mt-5 pb-3\">\r\n                    <Row className=\"col-12 p-0 m-auto flex-nowrap\">\r\n                    <Col className=\"removePadding\">\r\n                        <ImageLoader category={this.props.category} image={this.props.product.Image[0]?this.props.product.Image[0]:null} length={1}/>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row className=\"col-12 p-0 m-auto\">\r\n                    <Col>\r\n                        <div variant=\"subtitle1\">\r\n                            <div className=\"sub\">\r\n                                {this.props.product.Name} <span style={{fontWeight:\"100\",fontSize:\"12px\"}}> {this.props.product.Size.Width}x{this.props.product.Size.Height}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div variant=\"bod2\">\r\n                            <div className=\"body2\">\r\n                                {this.props.product.Brand}\r\n                            </div>\r\n                        </div>\r\n                        <div style={{fontWeight:\"100\",fontSize:\"12px\"}}>\r\n                                {this.props.product.Colors}\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n\r\n                {/* Will only be visible if window size is md or lg or xl */}\r\n                <Card className=\"shadow-lg mb-2 bg-white rounded visibilityAccess d-none d-sm-block\">\r\n                    <CardTitle id={this.props.product._id} onClick={()=>this.productDetail(this.props.product._id)} style={{padding:\"0px\"}}>\r\n                        <ImageLoader category={this.props.category} image={this.props.product.Image[0]?this.props.product.Image[0]:null} length={1} />\r\n                    </CardTitle>\r\n                    <CardBody id={this.props.product._id} style={{minHeight:\"110px\",maxHeight:\"fit-content\", paddingTop: \"0\" }}>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"subCard\">\r\n                                    {this.props.product.Name}   <span style={{fontWeight:\"100\",fontFamily:\"monospace\"}}>{this.props.product.Size.Width}x{this.props.product.Size.Height}</span>\r\n                                </div>\r\n                                <div style={{fontWeight:\"100\",fontFamily:\"monospace\",textAlign:\"left\"}}>\r\n                                    {this.props.product.Colors}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"body2Card\">\r\n                                    {this.props.product.Brand}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"col-12\">\r\n                                <div className=\"col-2 ml-auto\"><i id={this.props.product._id+\"button\"} onClick={this.AddToWishlist} class=\"fa fa-heart fa-2x\" style={{color:this.state.color}} aria-hidden=\"true\"></i></div>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDisplay;\r\n\r\n","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Header.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ColorLoader.js",["166","167","168"],"import React, { Component } from 'react'\r\nimport { Col } from 'reactstrap'\r\n\r\n\r\nexport function ColorLoader(props) {\r\n    function addColorSelection(category,colorProductId) {\r\n        // props.colorPrice(e.target.id)\r\n        // let circle=document.getElementsByClassName(\"rounded-circle\")\r\n        // let i=0\r\n        // while(circle[i]){\r\n        //     if(circle[i].id===e.target.id){\r\n        //         circle[i].innerHTML=\"<i class='fa fa-check' style={{color:'blue'}} aria-hidden='true'></i>\"\r\n        //     }\r\n        //     else{\r\n        //         circle[i].innerHTML=\"\"\r\n        //     }\r\n        //     i++;\r\n        // }\r\n        window.location.href=`/${category}/detail/${colorProductId}`\r\n    }\r\n    var array = []\r\n    var colors = props.color\r\n    \r\n    colors.map((c, i) => {\r\n        array.push(<Col className=\"m-auto col-1 col-sm-2\"><p>{c}</p><div id={i} onClick={()=>addColorSelection(props.category,props.colorProductId[i])} style={{ display: \"inline\", margin: \"0px\" }} className=\"rounded-circle custom-circle\" style={{ backgroundColor: c }}>{props.currentProductId===props.colorProductId[i]?<i class='fa fa-check' aria-hidden='true'></i>:null}</div></Col>)\r\n    })\r\n    return array;\r\n\r\n}","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\ViewModal.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\ImageLoader.js",["169","170"],"import React from 'react';\r\n\r\nimport {url} from '../../shared/constant'\r\n\r\nimport DynamicCarousel from '../CommonComponents/DynamicCarousel'\r\n\r\nexport function ImageLoader(props){\r\n\r\n    let image=url + \"/\" + props.category + \"/images\" + \"/\" + props.image\r\n\r\n    return(\r\n        <div style={{height:\"100%\"}} >\r\n            {props.length==1?\r\n            <img id={props.id} className=\"image col-md-12\"\r\n            src={props.image!==null?image:null}\r\n            alt={props.image!==null?props.image:null}/>:\r\n            <DynamicCarousel category={props.category} image={props.image}/>}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\Modals\\AddModal.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"import React, { Component } from 'react';\r\nimport { Button, Col, Label, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'\r\nimport Axios from 'axios';\r\n\r\nimport {url} from '../../shared/constant'\r\n\r\nvar required = (val) => val && val.length;\r\nvar dataType = (val) => !(val) || /\\d+$/i.test(val);\r\nclass AddModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModal: this.props.isModalOpen\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.toggleAddModal = this.toggleAddModal.bind(this)\r\n        this.addCost = this.addCost.bind(this)\r\n    }\r\n    handleSubmit(values) {\r\n        const formData= new FormData();\r\n        formData.append('name',values.name)\r\n        formData.append(\"catalogue\",values.catalogue)\r\n        formData.append('width',values.width)\r\n        formData.append('Height',values.Height)\r\n        formData.append('material',values.material)\r\n        formData.append('warranty',values.warranty)\r\n        formData.append('brand',values.brand)\r\n        formData.append('desc',values.desc)\r\n        formData.append('features',values.features)\r\n        \r\n        formData.append('colors',values.colors)\r\n        let array=[]\r\n        let quantityArray=[]\r\n        let imageLength=[]\r\n        for(let i=0;i<values.colors.length;i++){\r\n            let price=\"price\"+values.colors[i]\r\n            let quantity=\"quantity\"+values.colors[i]\r\n            let im=\"image\"+values.colors[i]\r\n            if(values[im]){\r\n            for(var j=0;j<values[im].length;j++){\r\n                formData.append('file',values[im][j])\r\n            }\r\n            }\r\n            imageLength[i]=values[im] ? values[im].length : 0\r\n            array[i]=values[price]\r\n            quantityArray[i]=values[quantity]\r\n            \r\n        }\r\n        formData.append('price',array)\r\n        formData.append('quantity',quantityArray)\r\n        formData.append(\"imageLength\",[imageLength])\r\n        Axios.post(`${url}/${this.props.category}/add`,formData)\r\n        .then(res=>{\r\n            // window.location.href=`${url}/${this.props.category}`\r\n            console.log(res.data)\r\n        })\r\n    }\r\n    async toggleAddModal() {\r\n        await this.setState({\r\n            isModal: !this.state.isModal\r\n        });\r\n\r\n        this.props.toggleAddModal(this.state.isModal)\r\n    }\r\n    async addCost(e) {\r\n        let option = document.getElementsByTagName(\"option\")\r\n        let i = 0\r\n        while (option[i]) {\r\n            if (option[i].selected) {\r\n                document.getElementById(\"price\" + option[i].value).classList.remove(\"d-none\")\r\n                document.getElementById(\"quantity\" + option[i].value).classList.remove(\"d-none\")\r\n                document.getElementById(\"image\" + option[i].value).classList.remove(\"d-none\")\r\n            }\r\n            else {\r\n                document.getElementById(\"price\" + option[i].value).classList.add(\"d-none\")\r\n                document.getElementById(\"quantity\" + option[i].value).classList.add(\"d-none\")\r\n                document.getElementById(\"image\" + option[i].value).classList.add(\"d-none\")\r\n            }\r\n            i = i + 1;\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Modal style={{ minWidth: \"60%\" }} isOpen={this.state.isModal} toggle={this.toggleAddModal}>\r\n                <ModalHeader\r\n                    style={{ backgroundColor: \"#3464eb\", color: \"white\" }}\r\n                    toggle={this.toggleAddModal}\r\n                >\r\n                    <h3>Add New {this.props.category.toUpperCase()}</h3>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"container\">\r\n                        <LocalForm encType=\"multipart/form-data\" onSubmit={this.handleSubmit} className=\"col-md-10\" validateOn=\"submit\">\r\n                            <Row className=\"form-group\" md={12}>\r\n                                <Label htmlFor=\"name\" md={3}><span style={{ color: \"red\" }}>* </span> Name: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".name\" id=\"name\" name=\"name\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".name\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"catalogue\" md={3}><span style={{ color: \"red\" }}>* </span> Catalogue No: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".catalogue\" id=\"catalogue\" name=\"catalogue\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".catalogue\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"size\"><span style={{ color: \"red\" }}>* </span> Size: </Label>\r\n                                <Col>\r\n                                    <Label htmlFor=\"width\"><span style={{ color: \"red\" }}>* </span> Width: </Label>\r\n                                    <Control.text className=\"form-control\" model=\".width\" id=\"width\" name=\"width\" validators={{ required, dataType }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".width\"\r\n                                        messages={{\r\n                                            required: \"This feild is required\",\r\n                                            dataType: \"Should be a Number\"\r\n                                        }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Label htmlFor=\"Height\"><span style={{ color: \"red\" }}>* </span> Height: </Label>\r\n                                    <Control.text className=\"form-control\" model=\".Height\" id=\"Height\" name=\"Height\" validators={{ required, dataType }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".Height\"\r\n                                        messages={{\r\n                                            required: \"This feild is required\",\r\n                                            dataType: \"Should be a Number\"\r\n                                        }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"colors\"><span style={{ color: \"red\" }}>* </span> Colors: </Label>\r\n                                <Col>\r\n                                    <Control.select onBlur={this.addCost} multiple class=\"form-control\" id=\"colors\" model=\".colors\" name=\"colors\" validators={{ required }}>\r\n                                        <option>White</option>\r\n                                        <option>Black</option>\r\n                                        <option>Grey</option>\r\n                                        <option>Ivory</option>\r\n                                        <option>Blue</option>\r\n                                    </Control.select>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".colors\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"price[]\"><span style={{ color: \"red\" }}>* </span> Price: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">\r\n                                    <Row className=\"col-12\">\r\n                                        <Col id=\"priceBlack\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceBlack\"><span style={{ color: \"red\" }}>* </span> Black: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".priceBlack\" name=\"price[]\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceWhite\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceWhite\"><span style={{ color: \"red\" }}>* </span> White: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".priceWhite\" name=\"priceWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceGrey\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceGrey\"><span style={{ color: \"red\" }}>* </span> Grey: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceGrey\" name=\"priceGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceBlue\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceBlue\"><span style={{ color: \"red\" }}>* </span> Blue: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceBlue\" name=\"priceBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"priceIvory\" className=\"d-none col-6 col-lg-3\">\r\n                                            <Label htmlFor=\"priceIvory\"><span style={{ color: \"red\" }}>* </span> Ivory: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".priceIvory\" name=\"priceIvory\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"brand\"><span style={{ color: \"red\" }}>* </span> Brand: </Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".brand\" id=\"brand\" name=\"brand\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".brand\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"image\">Image: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">                                \r\n                                        <Col id=\"imageBlack\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageBlack\">Black: </Label>\r\n                                            <Control.file multiple className=\"form-control\" model=\".imageBlack\" name=\"imageBlack\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageWhite\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageWhite\">White: </Label>\r\n                                            <Control.file multiple className=\"form-control\" model=\".imageWhite\" name=\"imageWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageGrey\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageGrey\">Grey: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageGrey\" name=\"imageGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageBlue\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageBlue\">Blue: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageBlue\" name=\"imageBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"imageIvory\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"imageIvory\">Ivory: </Label>\r\n                                            <Control.file multiple class=\"form-control\" model=\".imageIvory\" name=\"imageIvory\" />\r\n                                        </Col>     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"quantity\"><span style={{ color: \"red\" }}>* </span> Quantity: </Label>\r\n                                <Col className=\"col-12 col-lg-9\">                                \r\n                                        <Col id=\"quantityBlack\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityBlack\">Black: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".quantityBlack\" name=\"quantityBlack\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityWhite\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityWhite\">White: </Label>\r\n                                            <Control.text type=\"number\" className=\"form-control\" model=\".quantityWhite\" name=\"quantityWhite\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityGrey\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityGrey\">Grey: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityGrey\" name=\"quantityGrey\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityBlue\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityBlue\">Blue: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityBlue\" name=\"quantityBlue\" />\r\n                                        </Col>\r\n                                        <Col id=\"quantityIvory\" className=\"d-none col-12\">\r\n                                            <Label htmlFor=\"quantityIvory\">Ivory: </Label>\r\n                                            <Control.text type=\"number\" class=\"form-control\" model=\".quantityIvory\" name=\"quantityIvory\" />\r\n                                        </Col>     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"warranty\"><span style={{ color: \"red\" }}>* </span> Warranty:</Label>\r\n                                <Col>\r\n                                    <Control.text className=\"form-control\" model=\".warranty\" id=\"warranty\" name=\"warranty\" validators={{ required }}></Control.text>\r\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".warranty\"\r\n                                        messages={{ required: \"This feild is required\" }}>\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Label md={3} htmlFor=\"material\">Material: </Label>\r\n                                <Col>\r\n                                    <Control.text name=\"material\" className=\"form-control\" model=\".material\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"desc\">Description: </Label>\r\n                                <Col>\r\n                                    <Control.textarea rows=\"5\" className=\"form-control\" model=\".desc\" id=\"desc\" name=\"desc\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={3} htmlFor=\"features\">Features: </Label>\r\n                                <Col>\r\n                                    <Control.textarea rows=\"5\" className=\"form-control\" model=\".features\" id=\"features\" name=\"features\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ offset: 4 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\Submenu.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\FunctionalComponent\\functionHelper.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\FullPreview.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\DynamicCarousel.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\shared\\constant.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchBar.js",["196"],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\CartDisplay.js",[],"C:\\Users\\HP PC\\Desktop\\compweb\\garg-marble\\client\\src\\component\\CommonComponents\\SearchResults.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},{"ruleId":"205","severity":1,"message":"206","line":44,"column":67,"nodeType":"207","messageId":"208","endLine":44,"endColumn":69},{"ruleId":"209","severity":1,"message":"210","line":63,"column":17,"nodeType":"211","messageId":"212","endLine":63,"endColumn":188},{"ruleId":"209","severity":1,"message":"210","line":52,"column":45,"nodeType":"211","messageId":"212","endLine":52,"endColumn":154},{"ruleId":"209","severity":1,"message":"213","line":65,"column":49,"nodeType":"211","messageId":"212","endLine":65,"endColumn":166},{"ruleId":"205","severity":1,"message":"206","line":88,"column":68,"nodeType":"207","messageId":"208","endLine":88,"endColumn":70},{"ruleId":"205","severity":1,"message":"214","line":94,"column":49,"nodeType":"215","messageId":"216","endLine":94,"endColumn":56},{"ruleId":"217","severity":1,"message":"218","line":132,"column":33,"nodeType":"219","messageId":"220","endLine":132,"endColumn":35},{"ruleId":"201","severity":1,"message":"221","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"222","line":3,"column":19,"nodeType":"203","messageId":"204","endLine":3,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":152,"column":83,"nodeType":"211","endLine":152,"endColumn":144},{"ruleId":"223","severity":1,"message":"224","line":165,"column":80,"nodeType":"211","endLine":165,"endColumn":149},{"ruleId":"223","severity":1,"message":"224","line":178,"column":78,"nodeType":"211","endLine":178,"endColumn":142},{"ruleId":"225","severity":1,"message":"226","line":189,"column":41,"nodeType":"211","endLine":189,"endColumn":140},{"ruleId":"225","severity":1,"message":"226","line":193,"column":62,"nodeType":"211","endLine":193,"endColumn":95},{"ruleId":"225","severity":1,"message":"226","line":199,"column":41,"nodeType":"211","endLine":199,"endColumn":137},{"ruleId":"225","severity":1,"message":"226","line":204,"column":41,"nodeType":"211","endLine":204,"endColumn":71},{"ruleId":"209","severity":1,"message":"210","line":111,"column":49,"nodeType":"211","messageId":"212","endLine":111,"endColumn":165},{"ruleId":"209","severity":1,"message":"213","line":125,"column":49,"nodeType":"211","messageId":"212","endLine":125,"endColumn":173},{"ruleId":"209","severity":1,"message":"210","line":153,"column":49,"nodeType":"211","messageId":"212","endLine":153,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":159,"column":49,"nodeType":"211","messageId":"212","endLine":159,"endColumn":133},{"ruleId":"209","severity":1,"message":"210","line":167,"column":49,"nodeType":"211","messageId":"212","endLine":167,"endColumn":171},{"ruleId":"209","severity":1,"message":"213","line":181,"column":49,"nodeType":"211","messageId":"212","endLine":181,"endColumn":178},{"ruleId":"209","severity":1,"message":"213","line":193,"column":49,"nodeType":"211","messageId":"212","endLine":193,"endColumn":178},{"ruleId":"209","severity":1,"message":"210","line":207,"column":49,"nodeType":"211","messageId":"212","endLine":207,"endColumn":153},{"ruleId":"209","severity":1,"message":"210","line":216,"column":49,"nodeType":"211","messageId":"212","endLine":216,"endColumn":142},{"ruleId":"209","severity":1,"message":"210","line":224,"column":49,"nodeType":"211","messageId":"212","endLine":224,"endColumn":133},{"ruleId":"209","severity":1,"message":"210","line":230,"column":49,"nodeType":"211","messageId":"212","endLine":230,"endColumn":156},{"ruleId":"209","severity":1,"message":"210","line":238,"column":49,"nodeType":"211","messageId":"212","endLine":238,"endColumn":136},{"ruleId":"209","severity":1,"message":"210","line":244,"column":49,"nodeType":"211","messageId":"212","endLine":244,"endColumn":142},{"ruleId":"205","severity":1,"message":"206","line":23,"column":56,"nodeType":"207","messageId":"208","endLine":23,"endColumn":58},{"ruleId":"217","severity":1,"message":"218","line":24,"column":28,"nodeType":"219","messageId":"220","endLine":24,"endColumn":30},{"ruleId":"205","severity":1,"message":"214","line":28,"column":21,"nodeType":"215","messageId":"216","endLine":28,"endColumn":28},{"ruleId":"201","severity":1,"message":"227","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"214","line":24,"column":23,"nodeType":"207","messageId":"228","endLine":24,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":25,"column":239,"nodeType":"231","messageId":"232","endLine":25,"endColumn":269},{"ruleId":"233","severity":1,"message":"234","line":9,"column":54,"nodeType":"219","messageId":"235","endLine":9,"endColumn":55},{"ruleId":"217","severity":1,"message":"218","line":13,"column":26,"nodeType":"219","messageId":"220","endLine":13,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":99,"column":37,"nodeType":"211","messageId":"212","endLine":99,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":108,"column":37,"nodeType":"211","messageId":"212","endLine":108,"endColumn":153},{"ruleId":"209","severity":1,"message":"210","line":118,"column":37,"nodeType":"211","messageId":"212","endLine":118,"endColumn":151},{"ruleId":"209","severity":1,"message":"210","line":128,"column":37,"nodeType":"211","messageId":"212","endLine":128,"endColumn":154},{"ruleId":"209","severity":1,"message":"236","line":140,"column":37,"nodeType":"211","messageId":"212","endLine":140,"endColumn":173},{"ruleId":"209","severity":1,"message":"210","line":158,"column":45,"nodeType":"211","messageId":"212","endLine":158,"endColumn":135},{"ruleId":"209","severity":1,"message":"210","line":162,"column":45,"nodeType":"211","messageId":"212","endLine":162,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":166,"column":45,"nodeType":"211","messageId":"212","endLine":166,"endColumn":132},{"ruleId":"209","severity":1,"message":"210","line":170,"column":45,"nodeType":"211","messageId":"212","endLine":170,"endColumn":132},{"ruleId":"209","severity":1,"message":"210","line":174,"column":45,"nodeType":"211","messageId":"212","endLine":174,"endColumn":134},{"ruleId":"209","severity":1,"message":"210","line":182,"column":37,"nodeType":"211","messageId":"212","endLine":182,"endColumn":141},{"ruleId":"209","severity":1,"message":"237","line":193,"column":45,"nodeType":"211","messageId":"212","endLine":193,"endColumn":133},{"ruleId":"209","severity":1,"message":"237","line":197,"column":45,"nodeType":"211","messageId":"212","endLine":197,"endColumn":133},{"ruleId":"209","severity":1,"message":"237","line":201,"column":45,"nodeType":"211","messageId":"212","endLine":201,"endColumn":127},{"ruleId":"209","severity":1,"message":"237","line":205,"column":45,"nodeType":"211","messageId":"212","endLine":205,"endColumn":127},{"ruleId":"209","severity":1,"message":"237","line":209,"column":45,"nodeType":"211","messageId":"212","endLine":209,"endColumn":129},{"ruleId":"209","severity":1,"message":"210","line":218,"column":45,"nodeType":"211","messageId":"212","endLine":218,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":222,"column":45,"nodeType":"211","messageId":"212","endLine":222,"endColumn":144},{"ruleId":"209","severity":1,"message":"210","line":226,"column":45,"nodeType":"211","messageId":"212","endLine":226,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":230,"column":45,"nodeType":"211","messageId":"212","endLine":230,"endColumn":138},{"ruleId":"209","severity":1,"message":"210","line":234,"column":45,"nodeType":"211","messageId":"212","endLine":234,"endColumn":140},{"ruleId":"209","severity":1,"message":"210","line":241,"column":37,"nodeType":"211","messageId":"212","endLine":241,"endColumn":150},{"ruleId":"209","severity":1,"message":"210","line":250,"column":37,"nodeType":"211","messageId":"212","endLine":250,"endColumn":112},{"ruleId":"209","severity":1,"message":"238","line":256,"column":37,"nodeType":"211","messageId":"212","endLine":256,"endColumn":125},{"ruleId":"209","severity":1,"message":"238","line":262,"column":37,"nodeType":"211","messageId":"212","endLine":262,"endColumn":137},{"ruleId":"209","severity":1,"message":"210","line":74,"column":15,"nodeType":"211","messageId":"212","endLine":74,"endColumn":111},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'SearchResults' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Control' is defined but never used.","'LocalForm' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]